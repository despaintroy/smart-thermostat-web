{"version":3,"sources":["ts/services/firebase.ts","ts/services/user.ts","ts/utils/paths.ts","Navigation.tsx","ts/containers/Dashboard/DialCircle.tsx","ts/containers/Dashboard/Dial.tsx","ts/containers/Dashboard/IndoorCard.tsx","ts/utils/constants.ts","ts/utils/helpers.ts","ts/containers/Dashboard/OutdoorCard.tsx","ts/services/weather.ts","ts/containers/Dashboard/Dashboard.tsx","ts/containers/Dashboard/index.js","ts/containers/Schedule/Schedule.tsx","ts/containers/Schedule/index.js","ts/services/auth.ts","ts/components/LoadingButton.tsx","ts/services/errors.ts","ts/containers/Settings/PasswordForm.tsx","ts/containers/Settings/ProfileForm.tsx","ts/containers/Settings/Settings.tsx","App.tsx","ts/components/forms/SignInForm.tsx","ts/containers/Signin.tsx","AppUnauthorized.tsx","index.tsx"],"names":["firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","formatUser","user","id","uid","name","displayName","email","phone","phoneNumber","Paths","dashboard","schedule","settings","signIn","Navigation","Navbar","collapseOnSelect","expand","bg","variant","className","fixed","Container","to","Brand","href","Toggle","Collapse","Nav","Link","DialCircle","props","children","Dial","useState","targetTemp","setTargetTemp","nextChange","onClick","temp","IndoorCard","NumericalStyle","classes","others","Card","Header","Body","Row","Col","formatNumber","number","style","decimal","decimals","thousandsSeparator","Number","toLocaleString","undefined","useGrouping","minimumFractionDigits","maximumFractionDigits","formatTemperature","temperature","OutdoorCard","weather","setWeather","updateWeather","fetch","then","response","json","r","catch","console","error","useEffect","feelsLike","humidity","percent","Dashboard","Schedule","signOut","LoadingButton","ModelName","buttonText","showLoading","Button","disabled","Spinner","animation","as","size","getMessage","e","message","ErrorMessages","code","replace","PasswordForm","p1Field","useRef","p2Field","isUpdating","setIsUpdating","readySubmit","setReadySubmit","errorText","setErrorText","changed","ready","current","value","Form","onSubmit","preventDefault","password","p1","p2","currentUser","updateFirePassword","Promise","reject","target","reset","AuthErrorCodes","CREDENTIAL_TOO_OLD_LOGIN_AGAIN","requiresReAuth","log","finally","Group","Label","Control","ref","type","onChange","placeholder","Alert","hidden","ProfileForm","useContext","UserContext","updateUser","nameField","emailField","loadingCount","setLoadingCount","hasChanged","setHasChanged","newName","newEmail","lock","updateProfile","updateFireEmail","noValidate","defaultValue","Text","Settings","location","reload","App","setUser","newUser","React","createContext","Provider","basename","exact","path","component","SignInForm","setEmail","setPassword","isLoading","setIsLoading","signInWithEmailAndPassword","resolve","SignIn","AppUnauthorized","push","onAuthStateChanged","fireUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a23ffed.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app'\nimport { getAuth } from 'firebase/auth'\n\n// These keys will be exposed on the client frontend, but this is safe\n// Security is enforced through Firebase security rules\n// See more: https://stackoverflow.com/questions/37482366/is-it-safe-to-expose-firebase-apikey-to-the-public/\nconst firebaseConfig = {\n\tapiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n\tauthDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n\tprojectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n\tstorageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n\tmessagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n\tappId: process.env.REACT_APP_FIREBASE_APP_ID,\n}\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig)\nexport const auth = getAuth(firebaseApp)\n","import {\n\tupdateEmail as updateFireEmail,\n\tupdatePassword as updateFirePassword,\n\tupdateProfile,\n\tUser as FireUser,\n} from '@firebase/auth'\n\nimport { auth } from './firebase'\nimport { User } from './models'\n\nexport const formatUser = (user: FireUser | null): User | null => {\n\tif (user)\n\t\treturn {\n\t\t\tid: user.uid,\n\t\t\tname: user.displayName,\n\t\t\temail: user.email,\n\t\t\tphone: user.phoneNumber,\n\t\t}\n\telse return null\n}\n\n// --------------------------------------------------\n//   GET\n// --------------------------------------------------\n\nexport const getUser = (): User | null => formatUser(auth.currentUser)\n\n// --------------------------------------------------\n//   PATCH\n// --------------------------------------------------\n\nexport const updateName = (name: string): Promise<void> => {\n\tif (auth.currentUser)\n\t\treturn updateProfile(auth.currentUser, { displayName: name })\n\treturn Promise.reject()\n}\n\nexport const updateEmail = (email: string): Promise<void> => {\n\tif (auth.currentUser) return updateFireEmail(auth.currentUser, email)\n\treturn Promise.reject()\n}\n\nexport const updatePassword = (password: string): Promise<void> => {\n\tif (auth.currentUser) return updateFirePassword(auth.currentUser, password)\n\treturn Promise.reject()\n}\n","const Paths = {\n\tdashboard: '/dashboard',\n\tschedule: '/schedule',\n\tsettings: '/settings',\n\tsignIn: '/signin',\n}\n\nexport default Paths\n","import 'scss/global.scss'\n\nimport React from 'react'\n\nimport { Container, Nav } from 'react-bootstrap'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Paths from 'ts/utils/paths'\n\nfunction Navigation(): React.ReactElement {\n\treturn (\n\t\t<Navbar\n\t\t\tcollapseOnSelect\n\t\t\texpand='md'\n\t\t\tbg='primary'\n\t\t\tvariant='dark'\n\t\t\tclassName='mb-4'\n\t\t\tfixed='top'\n\t\t>\n\t\t\t<Container>\n\t\t\t\t<LinkContainer to={Paths.dashboard}>\n\t\t\t\t\t<Navbar.Brand href={Paths.dashboard}>Smart Thermostat</Navbar.Brand>\n\t\t\t\t</LinkContainer>\n\t\t\t\t<Navbar.Toggle aria-controls='responsive-navbar-nav' />\n\t\t\t\t<Navbar.Collapse id='responsive-navbar-nav'>\n\t\t\t\t\t<Nav className='me-auto'>\n\t\t\t\t\t\t<LinkContainer to={Paths.dashboard}>\n\t\t\t\t\t\t\t<Nav.Link>Dashboard</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t<LinkContainer to={Paths.schedule}>\n\t\t\t\t\t\t\t<Nav.Link>Schedule</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t<LinkContainer to={Paths.settings}>\n\t\t\t\t\t\t\t<Nav.Link>Settings</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Container>\n\t\t</Navbar>\n\t)\n}\n\nexport default Navigation\n","import React from 'react'\n\nfunction DialCircle(props: { children: React.ReactNode }): React.ReactElement {\n\tconst { children } = props\n\treturn (\n\t\t<div className='dial dial-circle'>\n\t\t\t<div className='circle__inner'>\n\t\t\t\t<div className='circle__wrapper'>\n\t\t\t\t\t<div className='circle__content'>{children}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default DialCircle\n","import React, { useState } from 'react'\n\nimport DialCircle from './DialCircle'\n\nfunction Dial(): React.ReactElement {\n\tconst [targetTemp, setTargetTemp] = useState(72)\n\tconst nextChange = { temp: 65, time: '6:00pm' }\n\n\treturn (\n\t\t<DialCircle>\n\t\t\t<div className='dial-stack'>\n\t\t\t\t<div\n\t\t\t\t\tclassName='adjust-button up'\n\t\t\t\t\tonClick={(): void => setTargetTemp(temp => ++temp)}\n\t\t\t\t>\n\t\t\t\t\t&uarr;\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='text-secondary'>SET TO</div>\n\t\t\t\t\t<div className='set-temp'>{targetTemp}º</div>\n\t\t\t\t\t<div className='text-muted mt-3'>\n\t\t\t\t\t\tScheduled change to {nextChange.temp}º<br />\n\t\t\t\t\t\tat {nextChange.time}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName='adjust-button down'\n\t\t\t\t\tonClick={(): void => setTargetTemp(temp => --temp)}\n\t\t\t\t>\n\t\t\t\t\t&darr;\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</DialCircle>\n\t)\n}\n\nexport default Dial\n","import React from 'react'\n\nimport { Card, CardProps, Col, Row } from 'react-bootstrap'\n\ntype IndoorCardProps = CardProps\n\nfunction IndoorCard(props: IndoorCardProps): React.ReactElement {\n\tconst { className: classes, ...others } = props\n\tconst temp = 71\n\tconst humidity = 40\n\n\treturn (\n\t\t<Card className={`content-card ${classes}`} {...others}>\n\t\t\t<Card.Header>Indoor</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>Temperature:</Col>\n\t\t\t\t\t<Col className='bold'>{temp}º</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>Humidity:</Col>\n\t\t\t\t\t<Col className='bold'>{humidity}%</Col>\n\t\t\t\t</Row>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t)\n}\n\nexport default IndoorCard\n","export enum NumericalStyle {\n\tcurrency = 'currency',\n\tdecimal = 'decimal',\n\tpercent = 'percent',\n}\n","import { NumericalStyle } from './constants'\n\nexport const formatNumber = (\n\tnumber: number,\n\tstyle = NumericalStyle.decimal,\n\tdecimals = 2,\n\tthousandsSeparator = true\n): string => {\n\treturn new Number(number).toLocaleString(undefined, {\n\t\tstyle: style,\n\t\tuseGrouping: thousandsSeparator,\n\t\tminimumFractionDigits: decimals,\n\t\tmaximumFractionDigits: decimals,\n\t})\n}\n\nexport const formatTemperature = (\n\ttemperature: number,\n\tdecimals = 0\n): string => {\n\treturn `${formatNumber(temperature, NumericalStyle.decimal, decimals)}º`\n}\n","import React, { useEffect, useState } from 'react'\n\nimport { Card, CardProps, Col, Row } from 'react-bootstrap'\nimport { Weather } from 'ts/services/models'\nimport { getWeather } from 'ts/services/weather'\nimport { NumericalStyle } from 'ts/utils/constants'\nimport { formatNumber, formatTemperature } from 'ts/utils/helpers'\n\ntype OutdoorCardProps = CardProps\n\nfunction OutdoorCard(props: OutdoorCardProps): React.ReactElement {\n\tconst { className: classes, ...others } = props\n\tconst [weather, setWeather] = useState<Weather>()\n\n\tconst updateWeather = (): void => {\n\t\tgetWeather()\n\t\t\t.then(r => setWeather(r))\n\t\t\t.catch(() => console.error('Error updating weather'))\n\t}\n\n\tuseEffect(() => updateWeather(), [])\n\n\treturn (\n\t\t<Card className={`content-card ${classes}`} {...others}>\n\t\t\t<Card.Header>Outdoor</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>Feels Like:</Col>\n\t\t\t\t\t<Col className='bold'>\n\t\t\t\t\t\t{weather?.feelsLike ? formatTemperature(weather.feelsLike) : '–'}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>Temperature:</Col>\n\t\t\t\t\t<Col className='bold'>\n\t\t\t\t\t\t{weather?.temperature\n\t\t\t\t\t\t\t? formatTemperature(weather.temperature)\n\t\t\t\t\t\t\t: '–'}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>Humidity:</Col>\n\t\t\t\t\t<Col className='bold'>\n\t\t\t\t\t\t{weather?.humidity\n\t\t\t\t\t\t\t? formatNumber(weather.humidity / 100, NumericalStyle.percent, 0)\n\t\t\t\t\t\t\t: '–'}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t)\n}\n\nexport default OutdoorCard\n","import { Weather } from './models'\n\nexport const getWeather = (): Promise<Weather> => {\n\treturn fetch(\n\t\t'https://us-central1-smart-thermostat-92710.cloudfunctions.net/app/api/weather'\n\t).then(response => response.json())\n}\n","import React from 'react'\n\nimport Dial from './Dial'\nimport IndoorCard from './IndoorCard'\nimport OutdoorCard from './OutdoorCard'\n\nfunction Dashboard(): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<Dial />\n\t\t\t<div className='dashboard-cards-container'>\n\t\t\t\t<IndoorCard className='mt-3' />\n\t\t\t\t<OutdoorCard className='mt-3' />\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default Dashboard\n","import Dashboard from './Dashboard'\n\nexport default Dashboard\n","import React from 'react'\n\nfunction Schedule(): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<h1>Schedule</h1>\n\t\t\t<p>This is the schedule page</p>\n\t\t</>\n\t)\n}\n\nexport default Schedule\n","import Schedule from './Schedule'\n\nexport default Schedule\n","import { signInWithEmailAndPassword } from 'firebase/auth'\n\nimport { auth } from './firebase'\n\nexport const signIn = (email: string, password: string): Promise<void> => {\n\treturn signInWithEmailAndPassword(auth, email, password).then(() =>\n\t\tPromise.resolve()\n\t)\n}\n\nexport const signOut = (): void => {\n\tauth.signOut()\n}\n","import React from 'react'\n\nimport { Button, ButtonProps, Spinner } from 'react-bootstrap'\n\ninterface LoadingButtonProps extends ButtonProps {\n\tbuttonText: string\n\tshowLoading: boolean\n\tonClick?: () => void\n}\n\nfunction LoadingButton(props: LoadingButtonProps): React.ReactElement {\n\tconst { buttonText, showLoading, onClick, ...others } = props\n\n\treturn (\n\t\t<Button disabled={showLoading} onClick={onClick} {...others}>\n\t\t\t{showLoading ? (\n\t\t\t\t<Spinner animation='border' as='span' size='sm' />\n\t\t\t) : (\n\t\t\t\tbuttonText\n\t\t\t)}\n\t\t</Button>\n\t)\n}\n\nexport default LoadingButton\n","import { AuthError, AuthErrorCodes } from '@firebase/auth'\n\nexport enum ModelName {\n\tauth = 'auth',\n\tuser = 'user',\n}\n\nexport type FirebaseError = Record<string, string>\n\nexport const requiresReAuth = (e: AuthError): boolean =>\n\te.code === AuthErrorCodes.CREDENTIAL_TOO_OLD_LOGIN_AGAIN\n\nexport const getMessage = (e: AuthError): string => {\n\tconst message = ErrorMessages[e.code]\n\treturn (\n\t\tmessage ?? e.message.replace('Firebase: ', '').replace(` (${e.code})`, '')\n\t)\n}\n\nexport const ErrorMessages: FirebaseError = {\n\t'auth/email-already-exists': 'An account already exists with this email.',\n\t'auth/requires-recent-login':\n\t\t'Please sign out then sign back in to perform this action',\n\t// 'auth/weak-password': 'This password is too weak',\n\t'auth/invalid-password': 'This password is invalid.',\n\t'auth/invalid-email': 'Email address is invalid',\n\t'auth/user-not-found': 'Account does not exist for this email address',\n\t'auth/wrong-password': 'Incorrect password',\n}\n","import React, { FormEvent, useRef, useState } from 'react'\n\nimport { Alert, Form } from 'react-bootstrap'\nimport LoadingButton from 'ts/components/LoadingButton'\nimport { getMessage, requiresReAuth } from 'ts/services/errors'\nimport { updatePassword } from 'ts/services/user'\n\nfunction PasswordForm(): React.ReactElement {\n\tconst p1Field = useRef<HTMLInputElement>(null)\n\tconst p2Field = useRef<HTMLInputElement>(null)\n\n\tconst [isUpdating, setIsUpdating] = useState(false)\n\tconst [readySubmit, setReadySubmit] = useState(false)\n\tconst [errorText, setErrorText] = useState<string>()\n\n\tconst changed = (): void => {\n\t\tconst ready = !!p1Field.current?.value && !!p2Field.current?.value\n\t\t!ready && setErrorText('')\n\t\tsetReadySubmit(ready)\n\t}\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\t\tsetIsUpdating(true)\n\t\tsetErrorText('')\n\n\t\tconst p1 = p1Field.current?.value\n\t\tconst p2 = p2Field.current?.value\n\n\t\tif (p1 && p1 === p2) {\n\t\t\tupdatePassword(p1)\n\t\t\t\t.then(() => (e.target as HTMLFormElement).reset())\n\t\t\t\t.catch(e => {\n\t\t\t\t\tif (requiresReAuth(e)) console.log('SIGN IN AGAIN')\n\t\t\t\t\tsetErrorText(getMessage(e))\n\t\t\t\t})\n\t\t\t\t.finally(() => setIsUpdating(false))\n\t\t} else {\n\t\t\tsetErrorText('Passwords do not match')\n\t\t\tsetIsUpdating(false)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Form onSubmit={submit}>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>New Password</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={p1Field}\n\t\t\t\t\ttype='password'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t\tplaceholder='New Password'\n\t\t\t\t/>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={p2Field}\n\t\t\t\t\ttype='password'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t\tplaceholder='Confirm New Password'\n\t\t\t\t\tclassName='mt-2'\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t{errorText && (\n\t\t\t\t<Alert className='mt-2 mb-0' variant='danger'>\n\t\t\t\t\t{errorText}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<LoadingButton\n\t\t\t\tclassName='mt-3 w-100'\n\t\t\t\tbuttonText='Change Password'\n\t\t\t\tshowLoading={isUpdating}\n\t\t\t\thidden={!readySubmit}\n\t\t\t\ttype='submit'\n\t\t\t/>\n\t\t</Form>\n\t)\n}\n\nexport default PasswordForm\n","import React, {\n\tFormEvent,\n\tuseContext,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from 'react'\n\nimport { UserContext } from 'App'\nimport { Alert, Form } from 'react-bootstrap'\nimport LoadingButton from 'ts/components/LoadingButton'\nimport { getMessage } from 'ts/services/errors'\nimport { updateEmail, updateName } from 'ts/services/user'\n\nfunction ProfileForm(): React.ReactElement {\n\tconst { user, updateUser } = useContext(UserContext)\n\tconst nameField = useRef<HTMLInputElement>(null)\n\tconst emailField = useRef<HTMLInputElement>(null)\n\n\tconst [loadingCount, setLoadingCount] = useState<number>(0)\n\tconst [isUpdating, setIsUpdating] = useState(false)\n\tconst [hasChanged, setHasChanged] = useState(false)\n\tconst [errorText, setErrorText] = useState<string>()\n\n\tuseEffect(() => setIsUpdating(loadingCount > 0), [loadingCount])\n\n\tconst changed = (): void => {\n\t\tconst changed: boolean =\n\t\t\tnameField.current?.value !== user.name ||\n\t\t\temailField.current?.value !== user.email\n\t\t!changed && setErrorText('')\n\t\tsetHasChanged(changed)\n\t}\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\t\tsetErrorText('')\n\n\t\tconst newName = nameField.current?.value\n\t\tconst newEmail = emailField.current?.value\n\n\t\tif (newName && newName !== user.name) {\n\t\t\tsetLoadingCount(lock => ++lock)\n\t\t\tupdateName(newName)\n\t\t\t\t.then(() => {\n\t\t\t\t\tupdateUser()\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tsetErrorText(getMessage(e))\n\t\t\t\t})\n\t\t\t\t.finally(() => setLoadingCount(lock => --lock))\n\t\t}\n\n\t\tif (newEmail !== undefined && newEmail !== user.email) {\n\t\t\tsetLoadingCount(lock => ++lock)\n\t\t\tif (newEmail === '') {\n\t\t\t\tsetErrorText('You must provide a valid email')\n\t\t\t\tsetLoadingCount(lock => --lock)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tupdateEmail(newEmail)\n\t\t\t\t.then(() => {\n\t\t\t\t\tupdateUser()\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tsetErrorText(getMessage(e))\n\t\t\t\t})\n\t\t\t\t.finally(() => setLoadingCount(lock => --lock))\n\t\t}\n\t}\n\n\treturn (\n\t\t<Form onSubmit={submit} noValidate>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={nameField}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tdefaultValue={user.name || ''}\n\t\t\t\t\tplaceholder='Name'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Email</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={emailField}\n\t\t\t\t\ttype='email'\n\t\t\t\t\tdefaultValue={user.email || ''}\n\t\t\t\t\tplaceholder='Email'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t/>\n\t\t\t\t<Form.Text>This email used for account sign in</Form.Text>\n\t\t\t</Form.Group>\n\t\t\t{errorText && (\n\t\t\t\t<Alert className='mt-2 mb-0' variant='danger'>\n\t\t\t\t\t{errorText}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<LoadingButton\n\t\t\t\tclassName='mt-3 w-100'\n\t\t\t\tbuttonText='Save Changes'\n\t\t\t\tshowLoading={isUpdating}\n\t\t\t\thidden={!hasChanged}\n\t\t\t\ttype='submit'\n\t\t\t/>\n\t\t</Form>\n\t)\n}\n\nexport default ProfileForm\n","import React from 'react'\n\nimport { Button, Card } from 'react-bootstrap'\nimport { signOut } from 'ts/services/auth'\n\nimport PasswordForm from './PasswordForm'\nimport ProfileForm from './ProfileForm'\n\nfunction Settings(): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<h1>Settings</h1>\n\t\t\t<Card className='content-card'>\n\t\t\t\t<Card.Header>Account</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<ProfileForm />\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\n\t\t\t<Card className='content-card mt-4'>\n\t\t\t\t<Card.Header>Change Password</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<PasswordForm />\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\n\t\t\t<hr className='mt-5 mb-3' />\n\t\t\t<Button variant='secondary' className='w-100' onClick={signOut}>\n\t\t\t\tSign Out &nbsp;&rarr;\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tvariant='outline-secondary'\n\t\t\t\tclassName='w-100 mt-2'\n\t\t\t\tonClick={(): void => location.reload()}\n\t\t\t>\n\t\t\t\tReload App\n\t\t\t</Button>\n\t\t</>\n\t)\n}\n\nexport default Settings\n","import 'scss/global.scss'\n\nimport React, { Context, useState } from 'react'\n\nimport Navigation from 'Navigation'\nimport { Container } from 'react-bootstrap'\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport Dashboard from 'ts/containers/Dashboard'\nimport Schedule from 'ts/containers/Schedule'\nimport Settings from 'ts/containers/Settings/Settings'\nimport { User } from 'ts/services/models'\nimport { getUser } from 'ts/services/user'\nimport Paths from 'ts/utils/paths'\n\nexport let UserContext: Context<{ user: User; updateUser: () => void }>\n\nfunction App(props: { user: User }): React.ReactElement {\n\tconst [user, setUser] = useState(props.user)\n\n\tconst updateUser = (): void => {\n\t\tconst newUser = getUser()\n\t\tnewUser && setUser(newUser)\n\t}\n\n\tUserContext = React.createContext({ user, updateUser })\n\n\treturn (\n\t\t<UserContext.Provider value={{ user, updateUser }}>\n\t\t\t<div className='app'>\n\t\t\t\t<HashRouter basename='/'>\n\t\t\t\t\t<Navigation />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Container className='pb-5'>\n\t\t\t\t\t\t\t<Route exact path={Paths.dashboard} component={Dashboard} />\n\t\t\t\t\t\t\t<Route exact path={Paths.schedule} component={Schedule} />\n\t\t\t\t\t\t\t<Route exact path={Paths.settings} component={Settings} />\n\n\t\t\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t\t\t<Route exact path={Paths.signIn}>\n\t\t\t\t\t\t\t\t<Redirect to={Paths.dashboard} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t\t\t\t<Redirect to={Paths.dashboard} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Switch>\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t</UserContext.Provider>\n\t)\n}\n\nexport default App\n","import React, { FormEvent, useState } from 'react'\n\nimport { Alert, Form } from 'react-bootstrap'\nimport LoadingButton from 'ts/components/LoadingButton'\nimport { signIn } from 'ts/services/auth'\nimport { getMessage } from 'ts/services/errors'\n\nexport default function SignInForm(): React.ReactElement {\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [errorText, setErrorText] = useState<string>()\n\tconst [isLoading, setIsLoading] = useState(false)\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\t\tsetErrorText('')\n\n\t\tif (!email || !password) setErrorText('Please enter all required fields')\n\t\telse {\n\t\t\tsetIsLoading(true)\n\t\t\tsignIn(email, password).catch(e => {\n\t\t\t\tsetErrorText(getMessage(e))\n\t\t\t\tsetIsLoading(false)\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<Form onSubmit={submit}>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\ttype='text'\n\t\t\t\t\tonChange={(e): void => setEmail(e.target.value)}\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\ttype='password'\n\t\t\t\t\tonChange={(e): void => setPassword(e.target.value)}\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t{errorText && (\n\t\t\t\t<Alert variant='secondary' className='mt-3'>\n\t\t\t\t\t{errorText}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<LoadingButton\n\t\t\t\ttype='submit'\n\t\t\t\tclassName='mt-3 w-100'\n\t\t\t\tbuttonText='Sign In'\n\t\t\t\tshowLoading={isLoading}\n\t\t\t/>\n\t\t</Form>\n\t)\n}\n","import React from 'react'\n\nimport { Card } from 'react-bootstrap'\nimport SignInForm from 'ts/components/forms/SignInForm'\n\nexport default function SignIn(): React.ReactElement {\n\treturn (\n\t\t<Card className='signin-card shadow mx-auto'>\n\t\t\t<Card.Header>Sign In</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SignInForm />\n\t\t\t</Card.Body>\n\t\t</Card>\n\t)\n}\n","import 'scss/unauthorized.scss'\n\nimport React from 'react'\n\nimport Container from 'react-bootstrap/Container'\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport SignIn from 'ts/containers/Signin'\nimport Paths from 'ts/utils/paths'\n\nfunction AppUnauthorized(): React.ReactElement {\n\treturn (\n\t\t<div className='app-unauthorized'>\n\t\t\t<Container>\n\t\t\t\t<HashRouter basename='/'>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<Route exact path={Paths.signIn} component={SignIn} />\n\n\t\t\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t\t\t<Redirect push to={Paths.signIn} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Switch>\n\t\t\t\t</HashRouter>\n\t\t\t</Container>\n\t\t</div>\n\t)\n}\n\nexport default AppUnauthorized\n","import 'scss/global.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { auth } from 'ts/services/firebase'\nimport { User } from 'ts/services/models'\nimport { formatUser } from 'ts/services/user'\n\nimport App from './App'\nimport AppUnauthorized from './AppUnauthorized'\n\nauth.onAuthStateChanged(fireUser => {\n\tconst user = formatUser(fireUser) as User\n\n\tif (user) {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<App user={user} />\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t} else {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<AppUnauthorized />\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t}\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n"],"sourceRoot":""}