{"version":3,"sources":["ts/services/firebase.ts","ts/services/user.ts","ts/utils/paths.ts","Navigation.tsx","ts/containers/Dashboard/Dashboard.tsx","ts/containers/Dashboard/index.js","ts/containers/Schedule/Schedule.tsx","ts/containers/Schedule/index.js","ts/services/auth.ts","ts/components/LoadingButton.tsx","ts/services/errors.ts","ts/containers/Settings/PasswordForm.tsx","ts/containers/Settings/ProfileForm.tsx","ts/containers/Settings/Settings.tsx","App.tsx","ts/containers/Signin.tsx","AppUnauthorized.tsx","index.tsx"],"names":["firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","formatUser","user","id","uid","name","displayName","email","phone","phoneNumber","Paths","dashboard","schedule","settings","signIn","Navigation","Navbar","collapseOnSelect","expand","bg","variant","className","Container","to","Brand","href","Toggle","Collapse","Nav","Link","Dashboard","Schedule","signOut","LoadingButton","ModelName","props","buttonText","showLoading","onClick","others","Button","disabled","Spinner","animation","as","size","getMessage","e","message","ErrorMessages","errors","code","replace","model","PasswordForm","p1Field","useRef","p2Field","useState","isUpdating","setIsUpdating","readySubmit","setReadySubmit","errorText","setErrorText","changed","ready","current","value","Form","onSubmit","preventDefault","password","p1","p2","currentUser","updateFirePassword","Promise","reject","then","target","reset","catch","AuthErrorCodes","CREDENTIAL_TOO_OLD_LOGIN_AGAIN","requiresReAuth","console","log","finally","Group","Label","Control","ref","type","onChange","placeholder","Alert","hidden","ProfileForm","useContext","UserContext","updateUser","nameField","emailField","loadingCount","setLoadingCount","hasChanged","setHasChanged","useEffect","newName","newEmail","lock","updateProfile","undefined","updateFireEmail","noValidate","defaultValue","Text","Settings","Card","Header","Body","location","reload","App","setUser","newUser","React","createContext","Provider","basename","exact","path","component","SignIn","setEmail","setPassword","isLoading","setIsLoading","signInWithEmailAndPassword","resolve","error","isInvalid","Feedback","AppUnauthorized","push","onAuthStateChanged","fireUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.383a8dfe.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app'\nimport { getAuth } from 'firebase/auth'\n\n// These keys will be exposed on the client frontend, but this is safe\n// Security is enforced through Firebase security rules\n// See more: https://stackoverflow.com/questions/37482366/is-it-safe-to-expose-firebase-apikey-to-the-public/\nconst firebaseConfig = {\n\tapiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n\tauthDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n\tprojectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n\tstorageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n\tmessagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n\tappId: process.env.REACT_APP_FIREBASE_APP_ID,\n}\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig)\nexport const auth = getAuth(firebaseApp)\n","import {\n\tupdateEmail as updateFireEmail,\n\tupdatePassword as updateFirePassword,\n\tupdateProfile,\n\tUser as FireUser,\n} from '@firebase/auth'\n\nimport { auth } from './firebase'\nimport { User } from './models'\n\nexport const formatUser = (user: FireUser | null): User | null => {\n\tif (user)\n\t\treturn {\n\t\t\tid: user.uid,\n\t\t\tname: user.displayName,\n\t\t\temail: user.email,\n\t\t\tphone: user.phoneNumber,\n\t\t}\n\telse return null\n}\n\n// --------------------------------------------------\n//   GET\n// --------------------------------------------------\n\nexport const getUser = (): User | null => formatUser(auth.currentUser)\n\n// --------------------------------------------------\n//   PATCH\n// --------------------------------------------------\n\nexport const updateName = (name: string): Promise<void> => {\n\tif (auth.currentUser)\n\t\treturn updateProfile(auth.currentUser, { displayName: name })\n\treturn Promise.reject()\n}\n\nexport const updateEmail = (email: string): Promise<void> => {\n\tif (auth.currentUser) return updateFireEmail(auth.currentUser, email)\n\treturn Promise.reject()\n}\n\nexport const updatePassword = (password: string): Promise<void> => {\n\tif (auth.currentUser) return updateFirePassword(auth.currentUser, password)\n\treturn Promise.reject()\n}\n","const Paths = {\n\tdashboard: '/dashboard',\n\tschedule: '/schedule',\n\tsettings: '/settings',\n\tsignIn: '/signin',\n}\n\nexport default Paths\n","import 'scss/global.scss'\n\nimport React from 'react'\n\nimport { Container, Nav } from 'react-bootstrap'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Paths from 'ts/utils/paths'\n\nfunction Navigation(): React.ReactElement {\n\treturn (\n\t\t<Navbar\n\t\t\tcollapseOnSelect\n\t\t\texpand='md'\n\t\t\tbg='primary'\n\t\t\tvariant='dark'\n\t\t\tclassName='mb-4'\n\t\t>\n\t\t\t<Container>\n\t\t\t\t<LinkContainer to={Paths.dashboard}>\n\t\t\t\t\t<Navbar.Brand href={Paths.dashboard}>Smart Thermostat</Navbar.Brand>\n\t\t\t\t</LinkContainer>\n\t\t\t\t<Navbar.Toggle aria-controls='responsive-navbar-nav' />\n\t\t\t\t<Navbar.Collapse id='responsive-navbar-nav'>\n\t\t\t\t\t<Nav className='me-auto'>\n\t\t\t\t\t\t<LinkContainer to={Paths.dashboard}>\n\t\t\t\t\t\t\t<Nav.Link>Dashboard</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t<LinkContainer to={Paths.schedule}>\n\t\t\t\t\t\t\t<Nav.Link>Schedule</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t<LinkContainer to={Paths.settings}>\n\t\t\t\t\t\t\t<Nav.Link>Settings</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Container>\n\t\t</Navbar>\n\t)\n}\n\nexport default Navigation\n","import React from 'react'\n\nfunction Dashboard(): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<h1>Dashboard</h1>\n\t\t\t<p>This is the dashboard page</p>\n\t\t</>\n\t)\n}\n\nexport default Dashboard\n","import Dashboard from './Dashboard'\n\nexport default Dashboard\n","import React from 'react'\n\nfunction Schedule(): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<h1>Schedule</h1>\n\t\t\t<p>This is the schedule page</p>\n\t\t</>\n\t)\n}\n\nexport default Schedule\n","import Schedule from './Schedule'\n\nexport default Schedule\n","import { signInWithEmailAndPassword } from 'firebase/auth'\n\nimport { auth } from './firebase'\n\nexport const signIn = (email: string, password: string): Promise<void> => {\n\treturn signInWithEmailAndPassword(auth, email, password)\n\t\t.then(() => {\n\t\t\treturn Promise.resolve()\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log('Error Signing In')\n\t\t\tconsole.log(error.code)\n\t\t\tconsole.log(error.message)\n\t\t\treturn Promise.reject()\n\t\t})\n}\n\nexport const signOut = (): void => {\n\tauth.signOut()\n}\n","import React from 'react'\n\nimport { Button, ButtonProps, Spinner } from 'react-bootstrap'\n\ninterface LoadingButtonProps extends ButtonProps {\n\tbuttonText: string\n\tshowLoading: boolean\n\tonClick?: () => void\n}\n\nfunction LoadingButton(props: LoadingButtonProps): React.ReactElement {\n\tconst { buttonText, showLoading, onClick, ...others } = props\n\n\treturn (\n\t\t<Button disabled={showLoading} onClick={onClick} {...others}>\n\t\t\t{showLoading ? (\n\t\t\t\t<Spinner animation='border' as='span' size='sm' />\n\t\t\t) : (\n\t\t\t\tbuttonText\n\t\t\t)}\n\t\t</Button>\n\t)\n}\n\nexport default LoadingButton\n","import { AuthError, AuthErrorCodes } from '@firebase/auth'\n\nexport enum ModelName {\n\tauth = 'auth',\n\tuser = 'user',\n}\n\nexport type FirebaseError = Record<string, string>\n\nexport interface ModelErrorCodes {\n\tmodel: ModelName\n\terrors: FirebaseError\n}\n\nexport const requiresReAuth = (e: AuthError): boolean =>\n\te.code === AuthErrorCodes.CREDENTIAL_TOO_OLD_LOGIN_AGAIN\n\nexport const getMessage = (e: AuthError): string => {\n\tconst message = ErrorMessages.errors[e.code]\n\treturn (\n\t\tmessage ?? e.message.replace('Firebase: ', '').replace(` (${e.code})`, '')\n\t)\n}\n\nexport const ErrorMessages: ModelErrorCodes = {\n\tmodel: ModelName.auth,\n\terrors: {\n\t\t'auth/email-already-exists': 'An account already exists with this email.',\n\t\t'auth/requires-recent-login':\n\t\t\t'Please sign out then sign back in to perform this action',\n\t\t// 'auth/weak-password': 'This password is too weak',\n\t\t'auth/invalid-password': 'This password is invalid.',\n\t\t'auth/invalid-email': 'Email address is invalid',\n\t},\n}\n","import React, { FormEvent, useRef, useState } from 'react'\n\nimport { Alert, Form } from 'react-bootstrap'\nimport LoadingButton from 'ts/components/LoadingButton'\nimport { getMessage, requiresReAuth } from 'ts/services/errors'\nimport { updatePassword } from 'ts/services/user'\n\nfunction PasswordForm(): React.ReactElement {\n\tconst p1Field = useRef<HTMLInputElement>(null)\n\tconst p2Field = useRef<HTMLInputElement>(null)\n\n\tconst [isUpdating, setIsUpdating] = useState(false)\n\tconst [readySubmit, setReadySubmit] = useState(false)\n\tconst [errorText, setErrorText] = useState<string>()\n\n\tconst changed = (): void => {\n\t\tconst ready = !!p1Field.current?.value && !!p2Field.current?.value\n\t\t!ready && setErrorText('')\n\t\tsetReadySubmit(ready)\n\t}\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\t\tsetIsUpdating(true)\n\t\tsetErrorText('')\n\n\t\tconst p1 = p1Field.current?.value\n\t\tconst p2 = p2Field.current?.value\n\n\t\tif (p1 && p1 === p2) {\n\t\t\tupdatePassword(p1)\n\t\t\t\t.then(() => (e.target as HTMLFormElement).reset())\n\t\t\t\t.catch(e => {\n\t\t\t\t\tif (requiresReAuth(e)) console.log('SIGN IN AGAIN')\n\t\t\t\t\tsetErrorText(getMessage(e))\n\t\t\t\t})\n\t\t\t\t.finally(() => setIsUpdating(false))\n\t\t} else {\n\t\t\tsetErrorText('Passwords do not match')\n\t\t\tsetIsUpdating(false)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Form onSubmit={submit}>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>New Password</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={p1Field}\n\t\t\t\t\ttype='password'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t\tplaceholder='New Password'\n\t\t\t\t/>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={p2Field}\n\t\t\t\t\ttype='password'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t\tplaceholder='Confirm New Password'\n\t\t\t\t\tclassName='mt-2'\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t{errorText && (\n\t\t\t\t<Alert className='mt-2 mb-0' variant='danger'>\n\t\t\t\t\t{errorText}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<LoadingButton\n\t\t\t\tclassName='mt-3 w-100'\n\t\t\t\tbuttonText='Change Password'\n\t\t\t\tshowLoading={isUpdating}\n\t\t\t\thidden={!readySubmit}\n\t\t\t\ttype='submit'\n\t\t\t/>\n\t\t</Form>\n\t)\n}\n\nexport default PasswordForm\n","import React, {\n\tFormEvent,\n\tuseContext,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from 'react'\n\nimport { UserContext } from 'App'\nimport { Alert, Form } from 'react-bootstrap'\nimport LoadingButton from 'ts/components/LoadingButton'\nimport { getMessage } from 'ts/services/errors'\nimport { updateEmail, updateName } from 'ts/services/user'\n\nfunction ProfileForm(): React.ReactElement {\n\tconst { user, updateUser } = useContext(UserContext)\n\tconst nameField = useRef<HTMLInputElement>(null)\n\tconst emailField = useRef<HTMLInputElement>(null)\n\n\tconst [loadingCount, setLoadingCount] = useState<number>(0)\n\tconst [isUpdating, setIsUpdating] = useState(false)\n\tconst [hasChanged, setHasChanged] = useState(false)\n\tconst [errorText, setErrorText] = useState<string>()\n\n\tuseEffect(() => setIsUpdating(loadingCount > 0), [loadingCount])\n\n\tconst changed = (): void => {\n\t\tconst changed: boolean =\n\t\t\tnameField.current?.value !== user.name ||\n\t\t\temailField.current?.value !== user.email\n\t\t!changed && setErrorText('')\n\t\tsetHasChanged(changed)\n\t}\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\t\tsetErrorText('')\n\n\t\tconst newName = nameField.current?.value\n\t\tconst newEmail = emailField.current?.value\n\n\t\tif (newName && newName !== user.name) {\n\t\t\tsetLoadingCount(lock => ++lock)\n\t\t\tupdateName(newName)\n\t\t\t\t.then(() => {\n\t\t\t\t\tupdateUser()\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tsetErrorText(getMessage(e))\n\t\t\t\t})\n\t\t\t\t.finally(() => setLoadingCount(lock => --lock))\n\t\t}\n\n\t\tif (newEmail !== undefined && newEmail !== user.email) {\n\t\t\tsetLoadingCount(lock => ++lock)\n\t\t\tif (newEmail === '') {\n\t\t\t\tsetErrorText('You must provide a valid email')\n\t\t\t\tsetLoadingCount(lock => --lock)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tupdateEmail(newEmail)\n\t\t\t\t.then(() => {\n\t\t\t\t\tupdateUser()\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tsetErrorText(getMessage(e))\n\t\t\t\t})\n\t\t\t\t.finally(() => setLoadingCount(lock => --lock))\n\t\t}\n\t}\n\n\treturn (\n\t\t<Form onSubmit={submit} noValidate>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={nameField}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tdefaultValue={user.name || ''}\n\t\t\t\t\tplaceholder='Name'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Email</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={emailField}\n\t\t\t\t\ttype='email'\n\t\t\t\t\tdefaultValue={user.email || ''}\n\t\t\t\t\tplaceholder='Email'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t/>\n\t\t\t\t<Form.Text>This email used for account sign in</Form.Text>\n\t\t\t</Form.Group>\n\t\t\t{errorText && (\n\t\t\t\t<Alert className='mt-2 mb-0' variant='danger'>\n\t\t\t\t\t{errorText}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<LoadingButton\n\t\t\t\tclassName='mt-3 w-100'\n\t\t\t\tbuttonText='Save Changes'\n\t\t\t\tshowLoading={isUpdating}\n\t\t\t\thidden={!hasChanged}\n\t\t\t\ttype='submit'\n\t\t\t/>\n\t\t</Form>\n\t)\n}\n\nexport default ProfileForm\n","import React from 'react'\n\nimport { Button, Card } from 'react-bootstrap'\nimport { signOut } from 'ts/services/auth'\n\nimport PasswordForm from './PasswordForm'\nimport ProfileForm from './ProfileForm'\n\nfunction Settings(): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<h1>Settings</h1>\n\t\t\t<Card className='content-card'>\n\t\t\t\t<Card.Header>Account</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<ProfileForm />\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\n\t\t\t<Card className='content-card mt-4'>\n\t\t\t\t<Card.Header>Change Password</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<PasswordForm />\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\n\t\t\t<hr className='mt-5 mb-3' />\n\t\t\t<Button variant='secondary' className='w-100' onClick={signOut}>\n\t\t\t\tSign Out &nbsp;&rarr;\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tvariant='outline-secondary'\n\t\t\t\tclassName='w-100 mt-2'\n\t\t\t\tonClick={(): void => location.reload()}\n\t\t\t>\n\t\t\t\tReload App\n\t\t\t</Button>\n\t\t</>\n\t)\n}\n\nexport default Settings\n","import 'scss/global.scss'\n\nimport React, { Context, useState } from 'react'\n\nimport Navigation from 'Navigation'\nimport { Container } from 'react-bootstrap'\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport Dashboard from 'ts/containers/Dashboard'\nimport Schedule from 'ts/containers/Schedule'\nimport Settings from 'ts/containers/Settings/Settings'\nimport { User } from 'ts/services/models'\nimport { getUser } from 'ts/services/user'\nimport Paths from 'ts/utils/paths'\n\nexport let UserContext: Context<{ user: User; updateUser: () => void }>\n\nfunction App(props: { user: User }): React.ReactElement {\n\tconst [user, setUser] = useState(props.user)\n\n\tconst updateUser = (): void => {\n\t\tconst newUser = getUser()\n\t\tnewUser && setUser(newUser)\n\t}\n\n\tUserContext = React.createContext({ user, updateUser })\n\n\treturn (\n\t\t<UserContext.Provider value={{ user, updateUser }}>\n\t\t\t<div className='App'>\n\t\t\t\t<HashRouter basename='/'>\n\t\t\t\t\t<Navigation />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<Route exact path={Paths.dashboard} component={Dashboard} />\n\t\t\t\t\t\t\t<Route exact path={Paths.schedule} component={Schedule} />\n\t\t\t\t\t\t\t<Route exact path={Paths.settings} component={Settings} />\n\n\t\t\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t\t\t<Route exact path={Paths.signIn}>\n\t\t\t\t\t\t\t\t<Redirect to={Paths.dashboard} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t\t\t\t<Redirect to={Paths.dashboard} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Switch>\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t</UserContext.Provider>\n\t)\n}\n\nexport default App\n","import React, { FormEvent, useState } from 'react'\n\nimport { Alert, Card, Form } from 'react-bootstrap'\nimport LoadingButton from 'ts/components/LoadingButton'\nimport { signIn } from 'ts/services/auth'\n\nexport default function SignIn(): React.ReactElement {\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [errorText, setErrorText] = useState<string>()\n\tconst [isLoading, setIsLoading] = useState(false)\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\t\tsetErrorText('')\n\n\t\tif (!email || !password) setErrorText('Please enter all required fields')\n\t\telse {\n\t\t\tsetIsLoading(true)\n\t\t\tsignIn(email, password).catch(() => {\n\t\t\t\tsetIsLoading(false)\n\t\t\t\tsetErrorText('Could not sign in')\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Card className='signin-card shadow mx-auto'>\n\t\t\t\t<Card.Header>Sign In</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t{/* <img src={process.env.PUBLIC_URL + '/logo-primary.png'} /> */}\n\t\t\t\t\t<Form onSubmit={submit}>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tonChange={(e): void => setEmail(e.target.value)}\n\t\t\t\t\t\t\t\tisInvalid={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback type='invalid'>\n\t\t\t\t\t\t\t\t{/* {feedback.username} */}\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tonChange={(e): void => setPassword(e.target.value)}\n\t\t\t\t\t\t\t\tisInvalid={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback type='invalid'>\n\t\t\t\t\t\t\t\t{/* {feedback.password} */}\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t{errorText && (\n\t\t\t\t\t\t\t<Alert variant='secondary' className='mt-3'>\n\t\t\t\t\t\t\t\t{errorText}\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<LoadingButton\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tclassName='mt-3 w-100'\n\t\t\t\t\t\t\tbuttonText='Sign In'\n\t\t\t\t\t\t\tshowLoading={isLoading}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</>\n\t)\n}\n","import 'scss/unauthorized.scss'\n\nimport React from 'react'\n\nimport Container from 'react-bootstrap/Container'\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport SignIn from 'ts/containers/Signin'\nimport Paths from 'ts/utils/paths'\n\nfunction AppUnauthorized(): React.ReactElement {\n\treturn (\n\t\t<div className='app-unauthorized'>\n\t\t\t<Container>\n\t\t\t\t<HashRouter basename='/'>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<Route exact path={Paths.signIn} component={SignIn} />\n\n\t\t\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t\t\t<Redirect push to={Paths.signIn} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Switch>\n\t\t\t\t</HashRouter>\n\t\t\t</Container>\n\t\t</div>\n\t)\n}\n\nexport default AppUnauthorized\n","import 'scss/global.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { auth } from 'ts/services/firebase'\nimport { User } from 'ts/services/models'\nimport { formatUser } from 'ts/services/user'\n\nimport App from './App'\nimport AppUnauthorized from './AppUnauthorized'\n\nauth.onAuthStateChanged(fireUser => {\n\tconst user = formatUser(fireUser) as User\n\n\tif (user) {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<App user={user} />\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t} else {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<AppUnauthorized />\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t}\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n"],"sourceRoot":""}