{"version":3,"sources":["ts/services/auth.ts","App.tsx","ts/containers/Signin.tsx","AppUnauthorized.tsx","index.tsx"],"names":["signOut","localStorage","removeItem","location","reload","App","className","Button","variant","onClick","SignIn","useState","username","setUsername","password","setPassword","errorText","setErrorText","Card","Header","Body","Form","onSubmit","e","preventDefault","setItem","Group","Label","Control","type","onChange","target","value","isInvalid","Feedback","Alert","AppUnauthorized","Container","ReactDOM","render","StrictMode","getItem","document","getElementById"],"mappings":"sOAAaA,EAAU,WACtBC,aAAaC,WAAW,SACxBC,SAASC,U,OCkBKC,MAbf,WACC,OACC,qBAAKC,UAAU,MAAf,SACC,yBAAQA,UAAU,aAAlB,UACC,2CACA,cAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOF,UAAU,aAAaG,QAAST,EAAvD,4B,gDCPW,SAASU,IACvB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,qBAAlC,mBAAOK,EAAP,KAAkBC,EAAlB,KASA,OACC,mCACC,eAACC,EAAA,EAAD,CAAMZ,UAAU,6BAAhB,UACC,cAACY,EAAA,EAAKC,OAAN,sBACA,cAACD,EAAA,EAAKE,KAAN,UAEC,eAACC,EAAA,EAAD,CAAMC,SAbK,SAACC,GACfA,EAAEC,iBAEGZ,GAAaE,GFPnBb,aAAawB,QAAQ,QAAS,QAC9BtB,SAASC,UEMoBa,EAAa,qCAUtC,UACC,eAACI,EAAA,EAAKK,MAAN,WACC,cAACL,EAAA,EAAKM,MAAN,uBACA,cAACN,EAAA,EAAKO,QAAN,CACCC,KAAK,OACLC,SAAU,SAACP,GAAD,OAAaV,EAAYU,EAAEQ,OAAOC,QAC5CC,WAAW,IAEZ,cAACZ,EAAA,EAAKO,QAAQM,SAAd,CAAuBL,KAAK,eAI7B,eAACR,EAAA,EAAKK,MAAN,WACC,cAACL,EAAA,EAAKM,MAAN,uBACA,cAACN,EAAA,EAAKO,QAAN,CACCC,KAAK,WACLC,SAAU,SAACP,GAAD,OAAaR,EAAYQ,EAAEQ,OAAOC,QAC5CC,WAAW,IAEZ,cAACZ,EAAA,EAAKO,QAAQM,SAAd,CAAuBL,KAAK,eAI5Bb,GACA,cAACmB,EAAA,EAAD,CAAO3B,QAAQ,YAAYF,UAAU,OAArC,SACEU,IAGH,cAACT,EAAA,EAAD,CAAQsB,KAAK,SAASvB,UAAU,aAAhC,+BClCS8B,MAVf,WACC,OACC,qBAAK9B,UAAU,mBAAf,SACC,cAAC+B,EAAA,EAAD,UACC,cAAC3B,EAAD,SCHJ4B,IAASC,OACR,cAAC,IAAMC,WAAP,UACEvC,aAAawC,QAAQ,SAAW,cAAC,EAAD,IAAU,cAAC,EAAD,MAE5CC,SAASC,eAAe,W","file":"static/js/main.418199a0.chunk.js","sourcesContent":["export const signOut = (): void => {\n\tlocalStorage.removeItem('token')\n\tlocation.reload()\n}\n\nexport const signIn = (): void => {\n\tlocalStorage.setItem('token', '1234')\n\tlocation.reload()\n}\n","import 'scss/global.scss'\n\nimport React from 'react'\n\nimport Button from 'react-bootstrap/Button'\nimport { signOut } from 'ts/services/auth'\n\nfunction App(): React.ReactElement {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<header className='App-header'>\n\t\t\t\t<p>Signed in!</p>\n\t\t\t\t<Button variant='link' className='text-white' onClick={signOut}>\n\t\t\t\t\tSign out\n\t\t\t\t</Button>\n\t\t\t</header>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React, { FormEvent, useState } from 'react'\n\nimport { Alert, Button, Card, Form } from 'react-bootstrap'\nimport { signIn } from 'ts/services/auth'\n\nexport default function SignIn(): React.ReactElement {\n\tconst [username, setUsername] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [errorText, setErrorText] = useState<string>()\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\n\t\tif (!username || !password) setErrorText('Please enter all required fields')\n\t\telse signIn()\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Card className='signin-card shadow mx-auto'>\n\t\t\t\t<Card.Header>Sign In</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t{/* <img src={process.env.PUBLIC_URL + '/logo-primary.png'} /> */}\n\t\t\t\t\t<Form onSubmit={submit}>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tonChange={(e): void => setUsername(e.target.value)}\n\t\t\t\t\t\t\t\tisInvalid={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback type='invalid'>\n\t\t\t\t\t\t\t\t{/* {feedback.username} */}\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tonChange={(e): void => setPassword(e.target.value)}\n\t\t\t\t\t\t\t\tisInvalid={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback type='invalid'>\n\t\t\t\t\t\t\t\t{/* {feedback.password} */}\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t{errorText && (\n\t\t\t\t\t\t\t<Alert variant='secondary' className='mt-3'>\n\t\t\t\t\t\t\t\t{errorText}\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button type='submit' className='w-100 mt-3'>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</>\n\t)\n}\n","import 'scss/unauthorized.scss'\n\nimport React from 'react'\n\nimport Container from 'react-bootstrap/Container'\nimport SignIn from 'ts/containers/Signin'\n\nfunction AppUnauthorized(): React.ReactElement {\n\treturn (\n\t\t<div className='app-unauthorized'>\n\t\t\t<Container>\n\t\t\t\t<SignIn />\n\t\t\t</Container>\n\t\t</div>\n\t)\n}\n\nexport default AppUnauthorized\n","import 'scss/global.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport AppUnauthorized from './AppUnauthorized'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t{localStorage.getItem('token') ? <App /> : <AppUnauthorized />}\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n"],"sourceRoot":""}