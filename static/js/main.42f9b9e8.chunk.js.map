{"version":3,"sources":["ts/services/firebase.ts","ts/services/user.ts","ts/utils/paths.ts","Navigation.tsx","ts/services/setState.ts","ts/containers/Dashboard/DialCircle.tsx","ts/containers/Dashboard/Dial.tsx","ts/containers/Dashboard/IndoorCard.tsx","ts/utils/constants.ts","ts/utils/helpers.ts","ts/containers/Dashboard/OutdoorCard.tsx","ts/services/weather.ts","ts/containers/Dashboard/Dashboard.tsx","ts/containers/Dashboard/index.js","ts/containers/Schedule/Schedule.tsx","ts/containers/Schedule/index.js","ts/services/auth.ts","ts/components/LoadingButton.tsx","ts/services/errors.ts","ts/containers/Settings/PasswordForm.tsx","ts/containers/Settings/ProfileForm.tsx","ts/containers/Settings/Settings.tsx","App.tsx","ts/components/forms/SignInForm.tsx","ts/containers/Signin.tsx","AppUnauthorized.tsx","index.tsx"],"names":["firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","database","getDatabase","formatUser","user","id","uid","name","displayName","email","phone","phoneNumber","Paths","dashboard","schedule","settings","signIn","Navigation","Navbar","collapseOnSelect","expand","bg","variant","className","fixed","Container","to","Brand","href","Toggle","Collapse","Nav","Link","dbDir","setStateDbRef","ref","DialCircle","props","children","Dial","useState","displayTemp","setDisplayTemp","nextChange","useEffect","get","child","then","snapshot","exists","Promise","resolve","val","reject","catch","r","setTemp","console","error","onValue","data","temp","setState","useSchedule","timeStamp","Date","getTime","set","undefined","onClick","IndoorCard","NumericalStyle","classes","others","Card","Header","Body","Row","Col","formatNumber","number","style","decimal","decimals","thousandsSeparator","Number","toLocaleString","useGrouping","minimumFractionDigits","maximumFractionDigits","formatTemperature","temperature","OutdoorCard","weather","setWeather","updateWeather","fetch","response","json","feelsLike","humidity","percent","Dashboard","Schedule","signOut","LoadingButton","ModelName","buttonText","showLoading","Button","disabled","Spinner","animation","as","size","getMessage","e","message","ErrorMessages","code","replace","PasswordForm","p1Field","useRef","p2Field","isUpdating","setIsUpdating","readySubmit","setReadySubmit","errorText","setErrorText","changed","ready","current","value","Form","onSubmit","preventDefault","password","p1","p2","currentUser","updateFirePassword","target","reset","AuthErrorCodes","CREDENTIAL_TOO_OLD_LOGIN_AGAIN","requiresReAuth","log","finally","Group","Label","Control","type","onChange","placeholder","Alert","hidden","ProfileForm","useContext","UserContext","updateUser","nameField","emailField","loadingCount","setLoadingCount","hasChanged","setHasChanged","newName","newEmail","lock","updateProfile","updateFireEmail","noValidate","defaultValue","Text","Settings","location","reload","App","setUser","newUser","React","createContext","Provider","basename","exact","path","component","SignInForm","setEmail","setPassword","isLoading","setIsLoading","signInWithEmailAndPassword","SignIn","AppUnauthorized","push","onAuthStateChanged","fireUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42f9b9e8.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app'\nimport { getAuth } from 'firebase/auth'\nimport { getDatabase } from 'firebase/database'\n\n// These keys will be exposed on the client frontend, but this is safe\n// Security is enforced through Firebase security rules\n// See more: https://stackoverflow.com/questions/37482366/is-it-safe-to-expose-firebase-apikey-to-the-public/\nconst firebaseConfig = {\n\tapiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n\tauthDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n\tprojectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n\tstorageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n\tmessagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n\tappId: process.env.REACT_APP_FIREBASE_APP_ID,\n}\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig)\nexport const auth = getAuth(firebaseApp)\nexport const database = getDatabase(firebaseApp)\n","import {\n\tupdateEmail as updateFireEmail,\n\tupdatePassword as updateFirePassword,\n\tupdateProfile,\n\tUser as FireUser,\n} from '@firebase/auth'\n\nimport { auth } from './firebase'\nimport { User } from './models'\n\nexport const formatUser = (user: FireUser | null): User | null => {\n\tif (user)\n\t\treturn {\n\t\t\tid: user.uid,\n\t\t\tname: user.displayName,\n\t\t\temail: user.email,\n\t\t\tphone: user.phoneNumber,\n\t\t}\n\telse return null\n}\n\n// --------------------------------------------------\n//   GET\n// --------------------------------------------------\n\nexport const getUser = (): User | null => formatUser(auth.currentUser)\n\n// --------------------------------------------------\n//   PATCH\n// --------------------------------------------------\n\nexport const updateName = (name: string): Promise<void> => {\n\tif (auth.currentUser)\n\t\treturn updateProfile(auth.currentUser, { displayName: name })\n\treturn Promise.reject()\n}\n\nexport const updateEmail = (email: string): Promise<void> => {\n\tif (auth.currentUser) return updateFireEmail(auth.currentUser, email)\n\treturn Promise.reject()\n}\n\nexport const updatePassword = (password: string): Promise<void> => {\n\tif (auth.currentUser) return updateFirePassword(auth.currentUser, password)\n\treturn Promise.reject()\n}\n","const Paths = {\n\tdashboard: '/dashboard',\n\tschedule: '/schedule',\n\tsettings: '/settings',\n\tsignIn: '/signin',\n}\n\nexport default Paths\n","import 'scss/global.scss'\n\nimport React from 'react'\n\nimport { Container, Nav } from 'react-bootstrap'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Paths from 'ts/utils/paths'\n\nfunction Navigation(): React.ReactElement {\n\treturn (\n\t\t<Navbar\n\t\t\tcollapseOnSelect\n\t\t\texpand='md'\n\t\t\tbg='primary'\n\t\t\tvariant='dark'\n\t\t\tclassName='mb-4'\n\t\t\tfixed='top'\n\t\t>\n\t\t\t<Container>\n\t\t\t\t<LinkContainer to={Paths.dashboard}>\n\t\t\t\t\t<Navbar.Brand href={Paths.dashboard}>Smart Thermostat</Navbar.Brand>\n\t\t\t\t</LinkContainer>\n\t\t\t\t<Navbar.Toggle aria-controls='responsive-navbar-nav' />\n\t\t\t\t<Navbar.Collapse id='responsive-navbar-nav'>\n\t\t\t\t\t<Nav className='me-auto'>\n\t\t\t\t\t\t<LinkContainer to={Paths.dashboard}>\n\t\t\t\t\t\t\t<Nav.Link>Dashboard</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t<LinkContainer to={Paths.schedule}>\n\t\t\t\t\t\t\t<Nav.Link>Schedule</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t<LinkContainer to={Paths.settings}>\n\t\t\t\t\t\t\t<Nav.Link>Settings</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Container>\n\t\t</Navbar>\n\t)\n}\n\nexport default Navigation\n","import { child } from 'firebase/database'\n\nimport { get, ref, set } from '@firebase/database'\n\nimport { database } from './firebase'\nimport { SetState } from './models'\n\nconst dbDir = 'setState/'\n\nexport const setStateDbRef = ref(database, dbDir)\n\nexport const writeState = (setState: SetState): void => {\n\tset(setStateDbRef, setState)\n}\n\nexport const readState = (): Promise<SetState> => {\n\treturn get(child(ref(database), dbDir))\n\t\t.then(snapshot => {\n\t\t\tif (snapshot.exists()) {\n\t\t\t\treturn Promise.resolve(snapshot.val() as SetState)\n\t\t\t} else {\n\t\t\t\treturn Promise.reject()\n\t\t\t}\n\t\t})\n\t\t.catch(() => Promise.reject())\n}\n","import React from 'react'\n\nfunction DialCircle(props: { children: React.ReactNode }): React.ReactElement {\n\tconst { children } = props\n\treturn (\n\t\t<div className='dial dial-circle'>\n\t\t\t<div className='circle__inner'>\n\t\t\t\t<div className='circle__wrapper'>\n\t\t\t\t\t<div className='circle__content'>{children}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default DialCircle\n","import React, { useEffect, useState } from 'react'\n\nimport { SetState } from 'ts/services/models'\nimport { readState, setStateDbRef, writeState } from 'ts/services/setState'\n\nimport { onValue } from '@firebase/database'\n\nimport DialCircle from './DialCircle'\n\nfunction Dial(): React.ReactElement {\n\tconst [displayTemp, setDisplayTemp] = useState<number>()\n\tconst nextChange = { temp: 65, time: '6:00pm' }\n\n\tuseEffect(() => {\n\t\treadState()\n\t\t\t.then(r => setDisplayTemp(r.setTemp))\n\t\t\t.catch(() => console.error('error getting setTemp'))\n\t}, [])\n\n\tonValue(setStateDbRef, snapshot => {\n\t\tconst data = snapshot.val() as SetState\n\t\tif (displayTemp !== data.setTemp) setDisplayTemp(data.setTemp)\n\t})\n\n\tconst setTemp = (temp: number): void => {\n\t\tdisplayTemp &&\n\t\t\twriteState({\n\t\t\t\tsetTemp: temp,\n\t\t\t\tuseSchedule: true,\n\t\t\t\ttimeStamp: new Date().getTime(),\n\t\t\t})\n\t}\n\n\tif (displayTemp === undefined) return <DialCircle> </DialCircle>\n\n\treturn (\n\t\t<DialCircle>\n\t\t\t<div className='dial-stack'>\n\t\t\t\t<div\n\t\t\t\t\tclassName='adjust-button up'\n\t\t\t\t\tonClick={(): void => setTemp(displayTemp + 1)}\n\t\t\t\t>\n\t\t\t\t\t&uarr;\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='text-secondary'>SET TO</div>\n\t\t\t\t\t<div className='set-temp'>{displayTemp}º</div>\n\t\t\t\t\t<div className='text-muted mt-3'>\n\t\t\t\t\t\tScheduled change to {nextChange.temp}º<br />\n\t\t\t\t\t\tat {nextChange.time}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName='adjust-button down'\n\t\t\t\t\tonClick={(): void => setTemp(displayTemp - 1)}\n\t\t\t\t>\n\t\t\t\t\t&darr;\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</DialCircle>\n\t)\n}\n\nexport default Dial\n","import React from 'react'\n\nimport { Card, CardProps, Col, Row } from 'react-bootstrap'\n\ntype IndoorCardProps = CardProps\n\nfunction IndoorCard(props: IndoorCardProps): React.ReactElement {\n\tconst { className: classes, ...others } = props\n\tconst temp = 71\n\tconst humidity = 40\n\n\treturn (\n\t\t<Card className={`content-card ${classes}`} {...others}>\n\t\t\t<Card.Header>Indoor</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>Temperature:</Col>\n\t\t\t\t\t<Col className='bold'>{temp}º</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>Humidity:</Col>\n\t\t\t\t\t<Col className='bold'>{humidity}%</Col>\n\t\t\t\t</Row>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t)\n}\n\nexport default IndoorCard\n","export enum NumericalStyle {\n\tcurrency = 'currency',\n\tdecimal = 'decimal',\n\tpercent = 'percent',\n}\n","import { NumericalStyle } from './constants'\n\nexport const formatNumber = (\n\tnumber: number,\n\tstyle = NumericalStyle.decimal,\n\tdecimals = 2,\n\tthousandsSeparator = true\n): string => {\n\treturn new Number(number).toLocaleString(undefined, {\n\t\tstyle: style,\n\t\tuseGrouping: thousandsSeparator,\n\t\tminimumFractionDigits: decimals,\n\t\tmaximumFractionDigits: decimals,\n\t})\n}\n\nexport const formatTemperature = (\n\ttemperature: number,\n\tdecimals = 0\n): string => {\n\treturn `${formatNumber(temperature, NumericalStyle.decimal, decimals)}º`\n}\n","import React, { useEffect, useState } from 'react'\n\nimport { Card, CardProps, Col, Row } from 'react-bootstrap'\nimport { Weather } from 'ts/services/models'\nimport { getWeather } from 'ts/services/weather'\nimport { NumericalStyle } from 'ts/utils/constants'\nimport { formatNumber, formatTemperature } from 'ts/utils/helpers'\n\ntype OutdoorCardProps = CardProps\n\nfunction OutdoorCard(props: OutdoorCardProps): React.ReactElement {\n\tconst { className: classes, ...others } = props\n\tconst [weather, setWeather] = useState<Weather>()\n\n\tconst updateWeather = (): void => {\n\t\tgetWeather()\n\t\t\t.then(r => setWeather(r))\n\t\t\t.catch(() => console.error('Error updating weather'))\n\t}\n\n\tuseEffect(() => updateWeather(), [])\n\n\treturn (\n\t\t<Card className={`content-card ${classes}`} {...others}>\n\t\t\t<Card.Header>Outdoor</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>Feels Like:</Col>\n\t\t\t\t\t<Col className='bold'>\n\t\t\t\t\t\t{weather?.feelsLike ? formatTemperature(weather.feelsLike) : '–'}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>Temperature:</Col>\n\t\t\t\t\t<Col className='bold'>\n\t\t\t\t\t\t{weather?.temperature\n\t\t\t\t\t\t\t? formatTemperature(weather.temperature)\n\t\t\t\t\t\t\t: '–'}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>Humidity:</Col>\n\t\t\t\t\t<Col className='bold'>\n\t\t\t\t\t\t{weather?.humidity\n\t\t\t\t\t\t\t? formatNumber(weather.humidity / 100, NumericalStyle.percent, 0)\n\t\t\t\t\t\t\t: '–'}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t)\n}\n\nexport default OutdoorCard\n","import { Weather } from './models'\n\nexport const getWeather = (): Promise<Weather> => {\n\treturn fetch(\n\t\t'https://us-central1-smart-thermostat-92710.cloudfunctions.net/app/api/weather'\n\t).then(response => response.json())\n}\n","import React from 'react'\n\nimport Dial from './Dial'\nimport IndoorCard from './IndoorCard'\nimport OutdoorCard from './OutdoorCard'\n\nfunction Dashboard(): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<Dial />\n\t\t\t<div className='dashboard-cards-container'>\n\t\t\t\t<IndoorCard className='mt-3' />\n\t\t\t\t<OutdoorCard className='mt-3' />\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default Dashboard\n","import Dashboard from './Dashboard'\n\nexport default Dashboard\n","import React from 'react'\n\nfunction Schedule(): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<h1>Schedule</h1>\n\t\t\t<p>This is the schedule page</p>\n\t\t</>\n\t)\n}\n\nexport default Schedule\n","import Schedule from './Schedule'\n\nexport default Schedule\n","import { signInWithEmailAndPassword } from 'firebase/auth'\n\nimport { auth } from './firebase'\n\nexport const signIn = (email: string, password: string): Promise<void> => {\n\treturn signInWithEmailAndPassword(auth, email, password).then(() =>\n\t\tPromise.resolve()\n\t)\n}\n\nexport const signOut = (): void => {\n\tauth.signOut()\n}\n","import React from 'react'\n\nimport { Button, ButtonProps, Spinner } from 'react-bootstrap'\n\ninterface LoadingButtonProps extends ButtonProps {\n\tbuttonText: string\n\tshowLoading: boolean\n\tonClick?: () => void\n}\n\nfunction LoadingButton(props: LoadingButtonProps): React.ReactElement {\n\tconst { buttonText, showLoading, onClick, ...others } = props\n\n\treturn (\n\t\t<Button disabled={showLoading} onClick={onClick} {...others}>\n\t\t\t{showLoading ? (\n\t\t\t\t<Spinner animation='border' as='span' size='sm' />\n\t\t\t) : (\n\t\t\t\tbuttonText\n\t\t\t)}\n\t\t</Button>\n\t)\n}\n\nexport default LoadingButton\n","import { AuthError, AuthErrorCodes } from '@firebase/auth'\n\nexport enum ModelName {\n\tauth = 'auth',\n\tuser = 'user',\n}\n\nexport type FirebaseError = Record<string, string>\n\nexport const requiresReAuth = (e: AuthError): boolean =>\n\te.code === AuthErrorCodes.CREDENTIAL_TOO_OLD_LOGIN_AGAIN\n\nexport const getMessage = (e: AuthError): string => {\n\tconst message = ErrorMessages[e.code]\n\treturn (\n\t\tmessage ?? e.message.replace('Firebase: ', '').replace(` (${e.code})`, '')\n\t)\n}\n\nexport const ErrorMessages: FirebaseError = {\n\t'auth/email-already-exists': 'An account already exists with this email.',\n\t'auth/requires-recent-login':\n\t\t'Please sign out then sign back in to perform this action',\n\t// 'auth/weak-password': 'This password is too weak',\n\t'auth/invalid-password': 'This password is invalid.',\n\t'auth/invalid-email': 'Email address is invalid',\n\t'auth/user-not-found': 'Account does not exist for this email address',\n\t'auth/wrong-password': 'Incorrect password',\n}\n","import React, { FormEvent, useRef, useState } from 'react'\n\nimport { Alert, Form } from 'react-bootstrap'\nimport LoadingButton from 'ts/components/LoadingButton'\nimport { getMessage, requiresReAuth } from 'ts/services/errors'\nimport { updatePassword } from 'ts/services/user'\n\nfunction PasswordForm(): React.ReactElement {\n\tconst p1Field = useRef<HTMLInputElement>(null)\n\tconst p2Field = useRef<HTMLInputElement>(null)\n\n\tconst [isUpdating, setIsUpdating] = useState(false)\n\tconst [readySubmit, setReadySubmit] = useState(false)\n\tconst [errorText, setErrorText] = useState<string>()\n\n\tconst changed = (): void => {\n\t\tconst ready = !!p1Field.current?.value && !!p2Field.current?.value\n\t\t!ready && setErrorText('')\n\t\tsetReadySubmit(ready)\n\t}\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\t\tsetIsUpdating(true)\n\t\tsetErrorText('')\n\n\t\tconst p1 = p1Field.current?.value\n\t\tconst p2 = p2Field.current?.value\n\n\t\tif (p1 && p1 === p2) {\n\t\t\tupdatePassword(p1)\n\t\t\t\t.then(() => (e.target as HTMLFormElement).reset())\n\t\t\t\t.catch(e => {\n\t\t\t\t\tif (requiresReAuth(e)) console.log('SIGN IN AGAIN')\n\t\t\t\t\tsetErrorText(getMessage(e))\n\t\t\t\t})\n\t\t\t\t.finally(() => setIsUpdating(false))\n\t\t} else {\n\t\t\tsetErrorText('Passwords do not match')\n\t\t\tsetIsUpdating(false)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Form onSubmit={submit}>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>New Password</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={p1Field}\n\t\t\t\t\ttype='password'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t\tplaceholder='New Password'\n\t\t\t\t/>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={p2Field}\n\t\t\t\t\ttype='password'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t\tplaceholder='Confirm New Password'\n\t\t\t\t\tclassName='mt-2'\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t{errorText && (\n\t\t\t\t<Alert className='mt-2 mb-0' variant='danger'>\n\t\t\t\t\t{errorText}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<LoadingButton\n\t\t\t\tclassName='mt-3 w-100'\n\t\t\t\tbuttonText='Change Password'\n\t\t\t\tshowLoading={isUpdating}\n\t\t\t\thidden={!readySubmit}\n\t\t\t\ttype='submit'\n\t\t\t/>\n\t\t</Form>\n\t)\n}\n\nexport default PasswordForm\n","import React, {\n\tFormEvent,\n\tuseContext,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from 'react'\n\nimport { UserContext } from 'App'\nimport { Alert, Form } from 'react-bootstrap'\nimport LoadingButton from 'ts/components/LoadingButton'\nimport { getMessage } from 'ts/services/errors'\nimport { updateEmail, updateName } from 'ts/services/user'\n\nfunction ProfileForm(): React.ReactElement {\n\tconst { user, updateUser } = useContext(UserContext)\n\tconst nameField = useRef<HTMLInputElement>(null)\n\tconst emailField = useRef<HTMLInputElement>(null)\n\n\tconst [loadingCount, setLoadingCount] = useState<number>(0)\n\tconst [isUpdating, setIsUpdating] = useState(false)\n\tconst [hasChanged, setHasChanged] = useState(false)\n\tconst [errorText, setErrorText] = useState<string>()\n\n\tuseEffect(() => setIsUpdating(loadingCount > 0), [loadingCount])\n\n\tconst changed = (): void => {\n\t\tconst changed: boolean =\n\t\t\tnameField.current?.value !== user.name ||\n\t\t\temailField.current?.value !== user.email\n\t\t!changed && setErrorText('')\n\t\tsetHasChanged(changed)\n\t}\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\t\tsetErrorText('')\n\n\t\tconst newName = nameField.current?.value\n\t\tconst newEmail = emailField.current?.value\n\n\t\tif (newName && newName !== user.name) {\n\t\t\tsetLoadingCount(lock => ++lock)\n\t\t\tupdateName(newName)\n\t\t\t\t.then(() => {\n\t\t\t\t\tupdateUser()\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tsetErrorText(getMessage(e))\n\t\t\t\t})\n\t\t\t\t.finally(() => setLoadingCount(lock => --lock))\n\t\t}\n\n\t\tif (newEmail !== undefined && newEmail !== user.email) {\n\t\t\tsetLoadingCount(lock => ++lock)\n\t\t\tif (newEmail === '') {\n\t\t\t\tsetErrorText('You must provide a valid email')\n\t\t\t\tsetLoadingCount(lock => --lock)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tupdateEmail(newEmail)\n\t\t\t\t.then(() => {\n\t\t\t\t\tupdateUser()\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tsetErrorText(getMessage(e))\n\t\t\t\t})\n\t\t\t\t.finally(() => setLoadingCount(lock => --lock))\n\t\t}\n\t}\n\n\treturn (\n\t\t<Form onSubmit={submit} noValidate>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={nameField}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tdefaultValue={user.name || ''}\n\t\t\t\t\tplaceholder='Name'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Email</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={emailField}\n\t\t\t\t\ttype='email'\n\t\t\t\t\tdefaultValue={user.email || ''}\n\t\t\t\t\tplaceholder='Email'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t/>\n\t\t\t\t<Form.Text>This email used for account sign in</Form.Text>\n\t\t\t</Form.Group>\n\t\t\t{errorText && (\n\t\t\t\t<Alert className='mt-2 mb-0' variant='danger'>\n\t\t\t\t\t{errorText}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<LoadingButton\n\t\t\t\tclassName='mt-3 w-100'\n\t\t\t\tbuttonText='Save Changes'\n\t\t\t\tshowLoading={isUpdating}\n\t\t\t\thidden={!hasChanged}\n\t\t\t\ttype='submit'\n\t\t\t/>\n\t\t</Form>\n\t)\n}\n\nexport default ProfileForm\n","import React from 'react'\n\nimport { Button, Card } from 'react-bootstrap'\nimport { signOut } from 'ts/services/auth'\n\nimport PasswordForm from './PasswordForm'\nimport ProfileForm from './ProfileForm'\n\nfunction Settings(): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<h1>Settings</h1>\n\t\t\t<Card className='content-card'>\n\t\t\t\t<Card.Header>Account</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<ProfileForm />\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\n\t\t\t<Card className='content-card mt-4'>\n\t\t\t\t<Card.Header>Change Password</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<PasswordForm />\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\n\t\t\t<hr className='mt-5 mb-3' />\n\t\t\t<Button variant='secondary' className='w-100' onClick={signOut}>\n\t\t\t\tSign Out &nbsp;&rarr;\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tvariant='outline-secondary'\n\t\t\t\tclassName='w-100 mt-2'\n\t\t\t\tonClick={(): void => location.reload()}\n\t\t\t>\n\t\t\t\tReload App\n\t\t\t</Button>\n\t\t</>\n\t)\n}\n\nexport default Settings\n","import 'scss/global.scss'\n\nimport React, { Context, useState } from 'react'\n\nimport Navigation from 'Navigation'\nimport { Container } from 'react-bootstrap'\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport Dashboard from 'ts/containers/Dashboard'\nimport Schedule from 'ts/containers/Schedule'\nimport Settings from 'ts/containers/Settings/Settings'\nimport { User } from 'ts/services/models'\nimport { getUser } from 'ts/services/user'\nimport Paths from 'ts/utils/paths'\n\nexport let UserContext: Context<{ user: User; updateUser: () => void }>\n\nfunction App(props: { user: User }): React.ReactElement {\n\tconst [user, setUser] = useState(props.user)\n\n\tconst updateUser = (): void => {\n\t\tconst newUser = getUser()\n\t\tnewUser && setUser(newUser)\n\t}\n\n\tUserContext = React.createContext({ user, updateUser })\n\n\treturn (\n\t\t<UserContext.Provider value={{ user, updateUser }}>\n\t\t\t<div className='app'>\n\t\t\t\t<HashRouter basename='/'>\n\t\t\t\t\t<Navigation />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Container className='pb-5'>\n\t\t\t\t\t\t\t<Route exact path={Paths.dashboard} component={Dashboard} />\n\t\t\t\t\t\t\t<Route exact path={Paths.schedule} component={Schedule} />\n\t\t\t\t\t\t\t<Route exact path={Paths.settings} component={Settings} />\n\n\t\t\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t\t\t<Route exact path={Paths.signIn}>\n\t\t\t\t\t\t\t\t<Redirect to={Paths.dashboard} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t\t\t\t<Redirect to={Paths.dashboard} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Switch>\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t</UserContext.Provider>\n\t)\n}\n\nexport default App\n","import React, { FormEvent, useState } from 'react'\n\nimport { Alert, Form } from 'react-bootstrap'\nimport LoadingButton from 'ts/components/LoadingButton'\nimport { signIn } from 'ts/services/auth'\nimport { getMessage } from 'ts/services/errors'\n\nexport default function SignInForm(): React.ReactElement {\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [errorText, setErrorText] = useState<string>()\n\tconst [isLoading, setIsLoading] = useState(false)\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\t\tsetErrorText('')\n\n\t\tif (!email || !password) setErrorText('Please enter all required fields')\n\t\telse {\n\t\t\tsetIsLoading(true)\n\t\t\tsignIn(email, password).catch(e => {\n\t\t\t\tsetErrorText(getMessage(e))\n\t\t\t\tsetIsLoading(false)\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<Form onSubmit={submit}>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\ttype='text'\n\t\t\t\t\tonChange={(e): void => setEmail(e.target.value)}\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\ttype='password'\n\t\t\t\t\tonChange={(e): void => setPassword(e.target.value)}\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t{errorText && (\n\t\t\t\t<Alert variant='secondary' className='mt-3'>\n\t\t\t\t\t{errorText}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<LoadingButton\n\t\t\t\ttype='submit'\n\t\t\t\tclassName='mt-3 w-100'\n\t\t\t\tbuttonText='Sign In'\n\t\t\t\tshowLoading={isLoading}\n\t\t\t/>\n\t\t</Form>\n\t)\n}\n","import React from 'react'\n\nimport { Card } from 'react-bootstrap'\nimport SignInForm from 'ts/components/forms/SignInForm'\n\nexport default function SignIn(): React.ReactElement {\n\treturn (\n\t\t<Card className='signin-card shadow mx-auto'>\n\t\t\t<Card.Header>Sign In</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SignInForm />\n\t\t\t</Card.Body>\n\t\t</Card>\n\t)\n}\n","import 'scss/unauthorized.scss'\n\nimport React from 'react'\n\nimport Container from 'react-bootstrap/Container'\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport SignIn from 'ts/containers/Signin'\nimport Paths from 'ts/utils/paths'\n\nfunction AppUnauthorized(): React.ReactElement {\n\treturn (\n\t\t<div className='app-unauthorized'>\n\t\t\t<Container>\n\t\t\t\t<HashRouter basename='/'>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<Route exact path={Paths.signIn} component={SignIn} />\n\n\t\t\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t\t\t<Redirect push to={Paths.signIn} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Switch>\n\t\t\t\t</HashRouter>\n\t\t\t</Container>\n\t\t</div>\n\t)\n}\n\nexport default AppUnauthorized\n","import 'scss/global.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { auth } from 'ts/services/firebase'\nimport { User } from 'ts/services/models'\nimport { formatUser } from 'ts/services/user'\n\nimport App from './App'\nimport AppUnauthorized from './AppUnauthorized'\n\nauth.onAuthStateChanged(fireUser => {\n\tconst user = formatUser(fireUser) as User\n\n\tif (user) {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<App user={user} />\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t} else {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<AppUnauthorized />\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t}\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n"],"sourceRoot":""}