{"version":3,"sources":["ts/services/firebase.ts","ts/services/user.ts","ts/utils/paths.ts","Navigation.tsx","ts/containers/Dashboard/DialCircle.tsx","ts/containers/Dashboard/Dial.tsx","ts/containers/Dashboard/IndoorCard.tsx","ts/containers/Dashboard/OutdoorCard.tsx","ts/containers/Dashboard/Dashboard.tsx","ts/containers/Dashboard/index.js","ts/containers/Schedule/Schedule.tsx","ts/containers/Schedule/index.js","ts/services/auth.ts","ts/components/LoadingButton.tsx","ts/services/errors.ts","ts/containers/Settings/PasswordForm.tsx","ts/containers/Settings/ProfileForm.tsx","ts/containers/Settings/Settings.tsx","App.tsx","ts/components/forms/SignInForm.tsx","ts/containers/Signin.tsx","AppUnauthorized.tsx","index.tsx"],"names":["firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","formatUser","user","id","uid","name","displayName","email","phone","phoneNumber","Paths","dashboard","schedule","settings","signIn","Navigation","Navbar","collapseOnSelect","expand","bg","variant","className","Container","to","Brand","href","Toggle","Collapse","Nav","Link","DialCircle","props","children","Dial","useState","targetTemp","setTargetTemp","nextChange","onClick","temp","IndoorCard","others","Card","Header","Body","OutdoorCard","Dashboard","Schedule","signOut","LoadingButton","ModelName","buttonText","showLoading","Button","disabled","Spinner","animation","as","size","getMessage","e","message","ErrorMessages","code","replace","PasswordForm","p1Field","useRef","p2Field","isUpdating","setIsUpdating","readySubmit","setReadySubmit","errorText","setErrorText","changed","ready","current","value","Form","onSubmit","preventDefault","password","p1","p2","currentUser","updateFirePassword","Promise","reject","then","target","reset","catch","AuthErrorCodes","CREDENTIAL_TOO_OLD_LOGIN_AGAIN","requiresReAuth","console","log","finally","Group","Label","Control","ref","type","onChange","placeholder","Alert","hidden","ProfileForm","useContext","UserContext","updateUser","nameField","emailField","loadingCount","setLoadingCount","hasChanged","setHasChanged","useEffect","newName","newEmail","lock","updateProfile","undefined","updateFireEmail","noValidate","defaultValue","Text","Settings","location","reload","App","setUser","newUser","React","createContext","Provider","basename","exact","path","component","SignInForm","setEmail","setPassword","isLoading","setIsLoading","signInWithEmailAndPassword","resolve","SignIn","AppUnauthorized","push","onAuthStateChanged","fireUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.921d5e60.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app'\nimport { getAuth } from 'firebase/auth'\n\n// These keys will be exposed on the client frontend, but this is safe\n// Security is enforced through Firebase security rules\n// See more: https://stackoverflow.com/questions/37482366/is-it-safe-to-expose-firebase-apikey-to-the-public/\nconst firebaseConfig = {\n\tapiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n\tauthDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n\tprojectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n\tstorageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n\tmessagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n\tappId: process.env.REACT_APP_FIREBASE_APP_ID,\n}\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig)\nexport const auth = getAuth(firebaseApp)\n","import {\n\tupdateEmail as updateFireEmail,\n\tupdatePassword as updateFirePassword,\n\tupdateProfile,\n\tUser as FireUser,\n} from '@firebase/auth'\n\nimport { auth } from './firebase'\nimport { User } from './models'\n\nexport const formatUser = (user: FireUser | null): User | null => {\n\tif (user)\n\t\treturn {\n\t\t\tid: user.uid,\n\t\t\tname: user.displayName,\n\t\t\temail: user.email,\n\t\t\tphone: user.phoneNumber,\n\t\t}\n\telse return null\n}\n\n// --------------------------------------------------\n//   GET\n// --------------------------------------------------\n\nexport const getUser = (): User | null => formatUser(auth.currentUser)\n\n// --------------------------------------------------\n//   PATCH\n// --------------------------------------------------\n\nexport const updateName = (name: string): Promise<void> => {\n\tif (auth.currentUser)\n\t\treturn updateProfile(auth.currentUser, { displayName: name })\n\treturn Promise.reject()\n}\n\nexport const updateEmail = (email: string): Promise<void> => {\n\tif (auth.currentUser) return updateFireEmail(auth.currentUser, email)\n\treturn Promise.reject()\n}\n\nexport const updatePassword = (password: string): Promise<void> => {\n\tif (auth.currentUser) return updateFirePassword(auth.currentUser, password)\n\treturn Promise.reject()\n}\n","const Paths = {\n\tdashboard: '/dashboard',\n\tschedule: '/schedule',\n\tsettings: '/settings',\n\tsignIn: '/signin',\n}\n\nexport default Paths\n","import 'scss/global.scss'\n\nimport React from 'react'\n\nimport { Container, Nav } from 'react-bootstrap'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Paths from 'ts/utils/paths'\n\nfunction Navigation(): React.ReactElement {\n\treturn (\n\t\t<Navbar\n\t\t\tcollapseOnSelect\n\t\t\texpand='md'\n\t\t\tbg='primary'\n\t\t\tvariant='dark'\n\t\t\tclassName='mb-4'\n\t\t>\n\t\t\t<Container>\n\t\t\t\t<LinkContainer to={Paths.dashboard}>\n\t\t\t\t\t<Navbar.Brand href={Paths.dashboard}>Smart Thermostat</Navbar.Brand>\n\t\t\t\t</LinkContainer>\n\t\t\t\t<Navbar.Toggle aria-controls='responsive-navbar-nav' />\n\t\t\t\t<Navbar.Collapse id='responsive-navbar-nav'>\n\t\t\t\t\t<Nav className='me-auto'>\n\t\t\t\t\t\t<LinkContainer to={Paths.dashboard}>\n\t\t\t\t\t\t\t<Nav.Link>Dashboard</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t<LinkContainer to={Paths.schedule}>\n\t\t\t\t\t\t\t<Nav.Link>Schedule</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t<LinkContainer to={Paths.settings}>\n\t\t\t\t\t\t\t<Nav.Link>Settings</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Container>\n\t\t</Navbar>\n\t)\n}\n\nexport default Navigation\n","import React from 'react'\n\nfunction DialCircle(props: { children: React.ReactNode }): React.ReactElement {\n\tconst { children } = props\n\treturn (\n\t\t<div className='dial dial-circle'>\n\t\t\t<div className='circle__inner'>\n\t\t\t\t<div className='circle__wrapper'>\n\t\t\t\t\t<div className='circle__content'>{children}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default DialCircle\n","import React, { useState } from 'react'\n\nimport DialCircle from './DialCircle'\n\nfunction Dial(): React.ReactElement {\n\tconst [targetTemp, setTargetTemp] = useState(72)\n\tconst nextChange = { temp: 65, time: '6:00pm' }\n\n\treturn (\n\t\t<DialCircle>\n\t\t\t<div className='dial-stack'>\n\t\t\t\t<div\n\t\t\t\t\tclassName='adjust-button up'\n\t\t\t\t\tonClick={(): void => setTargetTemp(temp => ++temp)}\n\t\t\t\t>\n\t\t\t\t\t&uarr;\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='text-secondary'>SET TO</div>\n\t\t\t\t\t<div className='set-temp'>{targetTemp}º</div>\n\t\t\t\t\t<div className='text-muted mt-3'>\n\t\t\t\t\t\tScheduled change to {nextChange.temp}º<br />\n\t\t\t\t\t\tat {nextChange.time}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName='adjust-button down'\n\t\t\t\t\tonClick={(): void => setTargetTemp(temp => --temp)}\n\t\t\t\t>\n\t\t\t\t\t&darr;\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</DialCircle>\n\t)\n}\n\nexport default Dial\n","import React from 'react'\n\nimport { Card, CardProps } from 'react-bootstrap'\n\ntype IndoorCardProps = CardProps\n\nfunction IndoorCard(props: IndoorCardProps): React.ReactElement {\n\tconst { ...others } = props\n\tconst temp = 71\n\tconst humidity = 40\n\n\treturn (\n\t\t<Card className='content-card' {...others}>\n\t\t\t<Card.Header>Indoor</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\tTemperature: <b>{temp}º</b>\n\t\t\t\t<br />\n\t\t\t\tHumidity: <b>{humidity}%</b>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t)\n}\n\nexport default IndoorCard\n","import React from 'react'\n\nimport { Card, CardProps } from 'react-bootstrap'\n\ntype OutdoorCardProps = CardProps\n\nfunction OutdoorCard(props: OutdoorCardProps): React.ReactElement {\n\tconst { ...others } = props\n\tconst temp = 43\n\tconst humidity = 60\n\n\treturn (\n\t\t<Card className='content-card' {...others}>\n\t\t\t<Card.Header>Outdoor</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\tTemperature: <b>{temp}º</b>\n\t\t\t\t<br />\n\t\t\t\tHumidity: <b>{humidity}%</b>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t)\n}\n\nexport default OutdoorCard\n","import React from 'react'\n\nimport Dial from './Dial'\nimport IndoorCard from './IndoorCard'\nimport OutdoorCard from './OutdoorCard'\n\nfunction Dashboard(): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<Dial />\n\t\t\t<IndoorCard className='mt-3' />\n\t\t\t<OutdoorCard className='mt-3' />\n\t\t</>\n\t)\n}\n\nexport default Dashboard\n","import Dashboard from './Dashboard'\n\nexport default Dashboard\n","import React from 'react'\n\nfunction Schedule(): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<h1>Schedule</h1>\n\t\t\t<p>This is the schedule page</p>\n\t\t</>\n\t)\n}\n\nexport default Schedule\n","import Schedule from './Schedule'\n\nexport default Schedule\n","import { signInWithEmailAndPassword } from 'firebase/auth'\n\nimport { auth } from './firebase'\n\nexport const signIn = (email: string, password: string): Promise<void> => {\n\treturn signInWithEmailAndPassword(auth, email, password).then(() =>\n\t\tPromise.resolve()\n\t)\n}\n\nexport const signOut = (): void => {\n\tauth.signOut()\n}\n","import React from 'react'\n\nimport { Button, ButtonProps, Spinner } from 'react-bootstrap'\n\ninterface LoadingButtonProps extends ButtonProps {\n\tbuttonText: string\n\tshowLoading: boolean\n\tonClick?: () => void\n}\n\nfunction LoadingButton(props: LoadingButtonProps): React.ReactElement {\n\tconst { buttonText, showLoading, onClick, ...others } = props\n\n\treturn (\n\t\t<Button disabled={showLoading} onClick={onClick} {...others}>\n\t\t\t{showLoading ? (\n\t\t\t\t<Spinner animation='border' as='span' size='sm' />\n\t\t\t) : (\n\t\t\t\tbuttonText\n\t\t\t)}\n\t\t</Button>\n\t)\n}\n\nexport default LoadingButton\n","import { AuthError, AuthErrorCodes } from '@firebase/auth'\n\nexport enum ModelName {\n\tauth = 'auth',\n\tuser = 'user',\n}\n\nexport type FirebaseError = Record<string, string>\n\nexport const requiresReAuth = (e: AuthError): boolean =>\n\te.code === AuthErrorCodes.CREDENTIAL_TOO_OLD_LOGIN_AGAIN\n\nexport const getMessage = (e: AuthError): string => {\n\tconst message = ErrorMessages[e.code]\n\treturn (\n\t\tmessage ?? e.message.replace('Firebase: ', '').replace(` (${e.code})`, '')\n\t)\n}\n\nexport const ErrorMessages: FirebaseError = {\n\t'auth/email-already-exists': 'An account already exists with this email.',\n\t'auth/requires-recent-login':\n\t\t'Please sign out then sign back in to perform this action',\n\t// 'auth/weak-password': 'This password is too weak',\n\t'auth/invalid-password': 'This password is invalid.',\n\t'auth/invalid-email': 'Email address is invalid',\n\t'auth/user-not-found': 'Account does not exist for this email address',\n\t'auth/wrong-password': 'Incorrect password',\n}\n","import React, { FormEvent, useRef, useState } from 'react'\n\nimport { Alert, Form } from 'react-bootstrap'\nimport LoadingButton from 'ts/components/LoadingButton'\nimport { getMessage, requiresReAuth } from 'ts/services/errors'\nimport { updatePassword } from 'ts/services/user'\n\nfunction PasswordForm(): React.ReactElement {\n\tconst p1Field = useRef<HTMLInputElement>(null)\n\tconst p2Field = useRef<HTMLInputElement>(null)\n\n\tconst [isUpdating, setIsUpdating] = useState(false)\n\tconst [readySubmit, setReadySubmit] = useState(false)\n\tconst [errorText, setErrorText] = useState<string>()\n\n\tconst changed = (): void => {\n\t\tconst ready = !!p1Field.current?.value && !!p2Field.current?.value\n\t\t!ready && setErrorText('')\n\t\tsetReadySubmit(ready)\n\t}\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\t\tsetIsUpdating(true)\n\t\tsetErrorText('')\n\n\t\tconst p1 = p1Field.current?.value\n\t\tconst p2 = p2Field.current?.value\n\n\t\tif (p1 && p1 === p2) {\n\t\t\tupdatePassword(p1)\n\t\t\t\t.then(() => (e.target as HTMLFormElement).reset())\n\t\t\t\t.catch(e => {\n\t\t\t\t\tif (requiresReAuth(e)) console.log('SIGN IN AGAIN')\n\t\t\t\t\tsetErrorText(getMessage(e))\n\t\t\t\t})\n\t\t\t\t.finally(() => setIsUpdating(false))\n\t\t} else {\n\t\t\tsetErrorText('Passwords do not match')\n\t\t\tsetIsUpdating(false)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Form onSubmit={submit}>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>New Password</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={p1Field}\n\t\t\t\t\ttype='password'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t\tplaceholder='New Password'\n\t\t\t\t/>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={p2Field}\n\t\t\t\t\ttype='password'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t\tplaceholder='Confirm New Password'\n\t\t\t\t\tclassName='mt-2'\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t{errorText && (\n\t\t\t\t<Alert className='mt-2 mb-0' variant='danger'>\n\t\t\t\t\t{errorText}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<LoadingButton\n\t\t\t\tclassName='mt-3 w-100'\n\t\t\t\tbuttonText='Change Password'\n\t\t\t\tshowLoading={isUpdating}\n\t\t\t\thidden={!readySubmit}\n\t\t\t\ttype='submit'\n\t\t\t/>\n\t\t</Form>\n\t)\n}\n\nexport default PasswordForm\n","import React, {\n\tFormEvent,\n\tuseContext,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from 'react'\n\nimport { UserContext } from 'App'\nimport { Alert, Form } from 'react-bootstrap'\nimport LoadingButton from 'ts/components/LoadingButton'\nimport { getMessage } from 'ts/services/errors'\nimport { updateEmail, updateName } from 'ts/services/user'\n\nfunction ProfileForm(): React.ReactElement {\n\tconst { user, updateUser } = useContext(UserContext)\n\tconst nameField = useRef<HTMLInputElement>(null)\n\tconst emailField = useRef<HTMLInputElement>(null)\n\n\tconst [loadingCount, setLoadingCount] = useState<number>(0)\n\tconst [isUpdating, setIsUpdating] = useState(false)\n\tconst [hasChanged, setHasChanged] = useState(false)\n\tconst [errorText, setErrorText] = useState<string>()\n\n\tuseEffect(() => setIsUpdating(loadingCount > 0), [loadingCount])\n\n\tconst changed = (): void => {\n\t\tconst changed: boolean =\n\t\t\tnameField.current?.value !== user.name ||\n\t\t\temailField.current?.value !== user.email\n\t\t!changed && setErrorText('')\n\t\tsetHasChanged(changed)\n\t}\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\t\tsetErrorText('')\n\n\t\tconst newName = nameField.current?.value\n\t\tconst newEmail = emailField.current?.value\n\n\t\tif (newName && newName !== user.name) {\n\t\t\tsetLoadingCount(lock => ++lock)\n\t\t\tupdateName(newName)\n\t\t\t\t.then(() => {\n\t\t\t\t\tupdateUser()\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tsetErrorText(getMessage(e))\n\t\t\t\t})\n\t\t\t\t.finally(() => setLoadingCount(lock => --lock))\n\t\t}\n\n\t\tif (newEmail !== undefined && newEmail !== user.email) {\n\t\t\tsetLoadingCount(lock => ++lock)\n\t\t\tif (newEmail === '') {\n\t\t\t\tsetErrorText('You must provide a valid email')\n\t\t\t\tsetLoadingCount(lock => --lock)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tupdateEmail(newEmail)\n\t\t\t\t.then(() => {\n\t\t\t\t\tupdateUser()\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tsetErrorText(getMessage(e))\n\t\t\t\t})\n\t\t\t\t.finally(() => setLoadingCount(lock => --lock))\n\t\t}\n\t}\n\n\treturn (\n\t\t<Form onSubmit={submit} noValidate>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={nameField}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tdefaultValue={user.name || ''}\n\t\t\t\t\tplaceholder='Name'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Email</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\tref={emailField}\n\t\t\t\t\ttype='email'\n\t\t\t\t\tdefaultValue={user.email || ''}\n\t\t\t\t\tplaceholder='Email'\n\t\t\t\t\tonChange={changed}\n\t\t\t\t\tdisabled={isUpdating}\n\t\t\t\t/>\n\t\t\t\t<Form.Text>This email used for account sign in</Form.Text>\n\t\t\t</Form.Group>\n\t\t\t{errorText && (\n\t\t\t\t<Alert className='mt-2 mb-0' variant='danger'>\n\t\t\t\t\t{errorText}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<LoadingButton\n\t\t\t\tclassName='mt-3 w-100'\n\t\t\t\tbuttonText='Save Changes'\n\t\t\t\tshowLoading={isUpdating}\n\t\t\t\thidden={!hasChanged}\n\t\t\t\ttype='submit'\n\t\t\t/>\n\t\t</Form>\n\t)\n}\n\nexport default ProfileForm\n","import React from 'react'\n\nimport { Button, Card } from 'react-bootstrap'\nimport { signOut } from 'ts/services/auth'\n\nimport PasswordForm from './PasswordForm'\nimport ProfileForm from './ProfileForm'\n\nfunction Settings(): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<h1>Settings</h1>\n\t\t\t<Card className='content-card'>\n\t\t\t\t<Card.Header>Account</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<ProfileForm />\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\n\t\t\t<Card className='content-card mt-4'>\n\t\t\t\t<Card.Header>Change Password</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<PasswordForm />\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\n\t\t\t<hr className='mt-5 mb-3' />\n\t\t\t<Button variant='secondary' className='w-100' onClick={signOut}>\n\t\t\t\tSign Out &nbsp;&rarr;\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tvariant='outline-secondary'\n\t\t\t\tclassName='w-100 mt-2'\n\t\t\t\tonClick={(): void => location.reload()}\n\t\t\t>\n\t\t\t\tReload App\n\t\t\t</Button>\n\t\t</>\n\t)\n}\n\nexport default Settings\n","import 'scss/global.scss'\n\nimport React, { Context, useState } from 'react'\n\nimport Navigation from 'Navigation'\nimport { Container } from 'react-bootstrap'\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport Dashboard from 'ts/containers/Dashboard'\nimport Schedule from 'ts/containers/Schedule'\nimport Settings from 'ts/containers/Settings/Settings'\nimport { User } from 'ts/services/models'\nimport { getUser } from 'ts/services/user'\nimport Paths from 'ts/utils/paths'\n\nexport let UserContext: Context<{ user: User; updateUser: () => void }>\n\nfunction App(props: { user: User }): React.ReactElement {\n\tconst [user, setUser] = useState(props.user)\n\n\tconst updateUser = (): void => {\n\t\tconst newUser = getUser()\n\t\tnewUser && setUser(newUser)\n\t}\n\n\tUserContext = React.createContext({ user, updateUser })\n\n\treturn (\n\t\t<UserContext.Provider value={{ user, updateUser }}>\n\t\t\t<div className='App'>\n\t\t\t\t<HashRouter basename='/'>\n\t\t\t\t\t<Navigation />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Container className='pb-5'>\n\t\t\t\t\t\t\t<Route exact path={Paths.dashboard} component={Dashboard} />\n\t\t\t\t\t\t\t<Route exact path={Paths.schedule} component={Schedule} />\n\t\t\t\t\t\t\t<Route exact path={Paths.settings} component={Settings} />\n\n\t\t\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t\t\t<Route exact path={Paths.signIn}>\n\t\t\t\t\t\t\t\t<Redirect to={Paths.dashboard} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t\t\t\t<Redirect to={Paths.dashboard} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Switch>\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t</UserContext.Provider>\n\t)\n}\n\nexport default App\n","import React, { FormEvent, useState } from 'react'\n\nimport { Alert, Form } from 'react-bootstrap'\nimport LoadingButton from 'ts/components/LoadingButton'\nimport { signIn } from 'ts/services/auth'\nimport { getMessage } from 'ts/services/errors'\n\nexport default function SignInForm(): React.ReactElement {\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [errorText, setErrorText] = useState<string>()\n\tconst [isLoading, setIsLoading] = useState(false)\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\t\tsetErrorText('')\n\n\t\tif (!email || !password) setErrorText('Please enter all required fields')\n\t\telse {\n\t\t\tsetIsLoading(true)\n\t\t\tsignIn(email, password).catch(e => {\n\t\t\t\tsetErrorText(getMessage(e))\n\t\t\t\tsetIsLoading(false)\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<Form onSubmit={submit}>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\ttype='text'\n\t\t\t\t\tonChange={(e): void => setEmail(e.target.value)}\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t<Form.Control\n\t\t\t\t\ttype='password'\n\t\t\t\t\tonChange={(e): void => setPassword(e.target.value)}\n\t\t\t\t/>\n\t\t\t</Form.Group>\n\t\t\t{errorText && (\n\t\t\t\t<Alert variant='secondary' className='mt-3'>\n\t\t\t\t\t{errorText}\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<LoadingButton\n\t\t\t\ttype='submit'\n\t\t\t\tclassName='mt-3 w-100'\n\t\t\t\tbuttonText='Sign In'\n\t\t\t\tshowLoading={isLoading}\n\t\t\t/>\n\t\t</Form>\n\t)\n}\n","import React from 'react'\n\nimport { Card } from 'react-bootstrap'\nimport SignInForm from 'ts/components/forms/SignInForm'\n\nexport default function SignIn(): React.ReactElement {\n\treturn (\n\t\t<Card className='signin-card shadow mx-auto'>\n\t\t\t<Card.Header>Sign In</Card.Header>\n\t\t\t<Card.Body>\n\t\t\t\t<SignInForm />\n\t\t\t</Card.Body>\n\t\t</Card>\n\t)\n}\n","import 'scss/unauthorized.scss'\n\nimport React from 'react'\n\nimport Container from 'react-bootstrap/Container'\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport SignIn from 'ts/containers/Signin'\nimport Paths from 'ts/utils/paths'\n\nfunction AppUnauthorized(): React.ReactElement {\n\treturn (\n\t\t<div className='app-unauthorized'>\n\t\t\t<Container>\n\t\t\t\t<HashRouter basename='/'>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<Route exact path={Paths.signIn} component={SignIn} />\n\n\t\t\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t\t\t<Redirect push to={Paths.signIn} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Switch>\n\t\t\t\t</HashRouter>\n\t\t\t</Container>\n\t\t</div>\n\t)\n}\n\nexport default AppUnauthorized\n","import 'scss/global.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { auth } from 'ts/services/firebase'\nimport { User } from 'ts/services/models'\nimport { formatUser } from 'ts/services/user'\n\nimport App from './App'\nimport AppUnauthorized from './AppUnauthorized'\n\nauth.onAuthStateChanged(fireUser => {\n\tconst user = formatUser(fireUser) as User\n\n\tif (user) {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<App user={user} />\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t} else {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<AppUnauthorized />\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t}\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n"],"sourceRoot":""}