{"version":3,"sources":["ts/services/firebase.ts","ts/services/user.ts","ts/services/auth.ts","ts/utils/paths.ts","Navigation.tsx","ts/containers/Dashboard/Dashboard.tsx","ts/containers/Dashboard/index.js","ts/containers/Schedule/Schedule.tsx","ts/containers/Schedule/index.js","ts/components/LoadingButton.tsx","ts/containers/Settings/Settings.tsx","App.tsx","ts/containers/Signin.tsx","AppUnauthorized.tsx","index.tsx"],"names":["firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","formatUser","user","id","uid","name","displayName","email","phone","phoneNumber","signOut","Paths","dashboard","schedule","settings","signIn","Navigation","Navbar","collapseOnSelect","expand","bg","variant","className","Container","to","Brand","href","Toggle","Collapse","Nav","Link","onClick","Dashboard","Schedule","LoadingButton","props","buttonText","showLoading","others","Button","disabled","Spinner","animation","as","size","Settings","useState","useContext","UserContext","setUser","nameField","useRef","emailField","updateLock","setUpdateLock","Form","onSubmit","e","preventDefault","newName","current","value","newEmail","lock","currentUser","updateProfile","Promise","reject","then","catch","console","error","finally","updateFireEmail","message","Group","Label","Control","ref","type","defaultValue","Text","App","basename","exact","path","component","push","SignIn","setEmail","password","setPassword","errorText","setErrorText","isLoading","setIsLoading","Card","Header","Body","signInWithEmailAndPassword","resolve","log","code","onChange","target","isInvalid","Feedback","Alert","AppUnauthorized","onAuthStateChanged","fireUser","React","createContext","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.d3af011f.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app'\nimport { getAuth } from 'firebase/auth'\n\n// These keys will be exposed on the client frontend, but this is safe\n// Security is enforced through Firebase security rules\n// See more: https://stackoverflow.com/questions/37482366/is-it-safe-to-expose-firebase-apikey-to-the-public/\nconst firebaseConfig = {\n\tapiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n\tauthDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n\tprojectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n\tstorageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n\tmessagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n\tappId: process.env.REACT_APP_FIREBASE_APP_ID,\n}\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig)\nexport const auth = getAuth(firebaseApp)\n","import {\n\tupdateEmail as updateFireEmail,\n\tupdateProfile,\n\tUser as FireUser,\n} from '@firebase/auth'\n\nimport { auth } from './firebase'\nimport { User } from './models'\n\nexport const formatUser = (user: FireUser | null): User | null => {\n\tif (user)\n\t\treturn {\n\t\t\tid: user.uid,\n\t\t\tname: user.displayName,\n\t\t\temail: user.email,\n\t\t\tphone: user.phoneNumber,\n\t\t}\n\telse return null\n}\n\n// --------------------------------------------------\n//   GET\n// --------------------------------------------------\n\nexport const getUser = (): User | null => formatUser(auth.currentUser)\n\n// --------------------------------------------------\n//   PATCH\n// --------------------------------------------------\n\nexport const updateName = (name: string): Promise<void> => {\n\tif (auth.currentUser)\n\t\treturn updateProfile(auth.currentUser, { displayName: name })\n\treturn Promise.reject()\n}\n\nexport const updateEmail = (email: string): Promise<void> => {\n\tif (auth.currentUser) return updateFireEmail(auth.currentUser, email)\n\treturn Promise.reject()\n}\n","import { signInWithEmailAndPassword } from 'firebase/auth'\n\nimport { auth } from './firebase'\n\nexport const signIn = (email: string, password: string): Promise<void> => {\n\treturn signInWithEmailAndPassword(auth, email, password)\n\t\t.then(() => {\n\t\t\treturn Promise.resolve()\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log('Error Signing In')\n\t\t\tconsole.log(error.code)\n\t\t\tconsole.log(error.message)\n\t\t\treturn Promise.reject()\n\t\t})\n}\n\nexport const signOut = (): void => {\n\tauth.signOut()\n}\n","const Paths = {\n\tdashboard: '/dashboard',\n\tschedule: '/schedule',\n\tsettings: '/settings',\n\tsignIn: '/signin',\n}\n\nexport default Paths\n","import 'scss/global.scss'\n\nimport React from 'react'\n\nimport { Container, Nav } from 'react-bootstrap'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { signOut } from 'ts/services/auth'\nimport Paths from 'ts/utils/paths'\n\nfunction Navigation(): React.ReactElement {\n\treturn (\n\t\t<Navbar\n\t\t\tcollapseOnSelect\n\t\t\texpand='sm'\n\t\t\tbg='primary'\n\t\t\tvariant='dark'\n\t\t\tclassName='mb-4'\n\t\t>\n\t\t\t<Container>\n\t\t\t\t<LinkContainer to={Paths.dashboard}>\n\t\t\t\t\t<Navbar.Brand href={Paths.dashboard}>Smart Thermostat</Navbar.Brand>\n\t\t\t\t</LinkContainer>\n\t\t\t\t<Navbar.Toggle aria-controls='responsive-navbar-nav' />\n\t\t\t\t<Navbar.Collapse id='responsive-navbar-nav'>\n\t\t\t\t\t<Nav className='justify-content-between w-100'>\n\t\t\t\t\t\t<div className='d-flex'>\n\t\t\t\t\t\t\t<LinkContainer to={Paths.dashboard}>\n\t\t\t\t\t\t\t\t<Nav.Link>Dashboard</Nav.Link>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<LinkContainer to={Paths.schedule}>\n\t\t\t\t\t\t\t\t<Nav.Link>Schedule</Nav.Link>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='d-flex'>\n\t\t\t\t\t\t\t<LinkContainer to={Paths.settings}>\n\t\t\t\t\t\t\t\t<Nav.Link>Settings</Nav.Link>\n\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t<Nav.Link onClick={signOut}>Sign Out</Nav.Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Container>\n\t\t</Navbar>\n\t)\n}\n\nexport default Navigation\n","import React from 'react'\n\nfunction Dashboard(): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<h1>Dashboard</h1>\n\t\t\t<p>This is the dashboard page</p>\n\t\t</>\n\t)\n}\n\nexport default Dashboard\n","import Dashboard from './Dashboard'\n\nexport default Dashboard\n","import React from 'react'\n\nfunction Schedule(): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<h1>Schedule</h1>\n\t\t\t<p>This is the schedule page</p>\n\t\t</>\n\t)\n}\n\nexport default Schedule\n","import Schedule from './Schedule'\n\nexport default Schedule\n","import React from 'react'\n\nimport { Button, ButtonProps, Spinner } from 'react-bootstrap'\n\ninterface LoadingButtonProps extends ButtonProps {\n\tbuttonText: string\n\tshowLoading: boolean\n\tonClick?: () => void\n}\n\nfunction LoadingButton(props: LoadingButtonProps): React.ReactElement {\n\tconst { buttonText, showLoading, onClick, ...others } = props\n\n\treturn (\n\t\t<Button disabled={showLoading} onClick={onClick} {...others}>\n\t\t\t{showLoading ? (\n\t\t\t\t<Spinner animation='border' as='span' size='sm' />\n\t\t\t) : (\n\t\t\t\tbuttonText\n\t\t\t)}\n\t\t</Button>\n\t)\n}\n\nexport default LoadingButton\n","import React, { FormEvent, useContext, useRef, useState } from 'react'\n\nimport { UserContext } from 'index'\nimport { Form } from 'react-bootstrap'\nimport LoadingButton from 'ts/components/LoadingButton'\nimport { updateEmail, updateName } from 'ts/services/user'\n\nfunction Settings(): React.ReactElement {\n\tconst [user, setUser] = useState(useContext(UserContext))\n\tconst nameField = useRef<HTMLInputElement>(null)\n\tconst emailField = useRef<HTMLInputElement>(null)\n\tconst [updateLock, setUpdateLock] = useState<number>(0)\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\n\t\tconst newName = nameField.current?.value\n\t\tconst newEmail = emailField.current?.value\n\n\t\tif (newName) {\n\t\t\tsetUpdateLock(lock => ++lock)\n\t\t\tupdateName(newName)\n\t\t\t\t.then(() =>\n\t\t\t\t\tsetUser(user => {\n\t\t\t\t\t\tuser.name = newName\n\t\t\t\t\t\treturn { ...user }\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.catch(e => console.error(e))\n\t\t\t\t.finally(() => setUpdateLock(lock => --lock))\n\t\t}\n\n\t\tif (newEmail) {\n\t\t\tsetUpdateLock(lock => ++lock)\n\t\t\tupdateEmail(newEmail)\n\t\t\t\t.then(() =>\n\t\t\t\t\tsetUser(user => {\n\t\t\t\t\t\tuser.email = newEmail\n\t\t\t\t\t\treturn { ...user }\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.catch(e => console.error(e.message))\n\t\t\t\t.finally(() => setUpdateLock(lock => --lock))\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Settings</h1>\n\t\t\t<h3>Account</h3>\n\t\t\t<Form onSubmit={submit}>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tref={nameField}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tdefaultValue={user.name || ''}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label>Email</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tref={emailField}\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tdefaultValue={user.email || ''}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Text>This email used for account sign in</Form.Text>\n\t\t\t\t</Form.Group>\n\t\t\t\t<LoadingButton\n\t\t\t\t\tclassName='mt-3 w-100'\n\t\t\t\t\tbuttonText='Save Changes'\n\t\t\t\t\tshowLoading={updateLock > 0}\n\t\t\t\t\ttype='submit'\n\t\t\t\t/>\n\t\t\t</Form>\n\t\t</>\n\t)\n}\n\nexport default Settings\n","import 'scss/global.scss'\n\nimport React from 'react'\n\nimport Navigation from 'Navigation'\nimport { Container } from 'react-bootstrap'\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport Dashboard from 'ts/containers/Dashboard'\nimport Schedule from 'ts/containers/Schedule'\nimport Settings from 'ts/containers/Settings/Settings'\nimport Paths from 'ts/utils/paths'\n\nfunction App(): React.ReactElement {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<HashRouter basename='/'>\n\t\t\t\t<Navigation />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Route exact path={Paths.dashboard} component={Dashboard} />\n\t\t\t\t\t\t<Route exact path={Paths.schedule} component={Schedule} />\n\t\t\t\t\t\t<Route exact path={Paths.settings} component={Settings} />\n\n\t\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t\t<Redirect push to={Paths.dashboard} />\n\t\t\t\t\t</Container>\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React, { FormEvent, useState } from 'react'\n\nimport { Alert, Card, Form } from 'react-bootstrap'\nimport LoadingButton from 'ts/components/LoadingButton'\nimport { signIn } from 'ts/services/auth'\n\nexport default function SignIn(): React.ReactElement {\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [errorText, setErrorText] = useState<string>()\n\tconst [isLoading, setIsLoading] = useState(false)\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\t\tsetErrorText('')\n\n\t\tif (!email || !password) setErrorText('Please enter all required fields')\n\t\telse {\n\t\t\tsetIsLoading(true)\n\t\t\tsignIn(email, password).catch(() => {\n\t\t\t\tsetIsLoading(false)\n\t\t\t\tsetErrorText('Could not sign in')\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Card className='signin-card shadow mx-auto'>\n\t\t\t\t<Card.Header>Sign In</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t{/* <img src={process.env.PUBLIC_URL + '/logo-primary.png'} /> */}\n\t\t\t\t\t<Form onSubmit={submit}>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tonChange={(e): void => setEmail(e.target.value)}\n\t\t\t\t\t\t\t\tisInvalid={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback type='invalid'>\n\t\t\t\t\t\t\t\t{/* {feedback.username} */}\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tonChange={(e): void => setPassword(e.target.value)}\n\t\t\t\t\t\t\t\tisInvalid={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback type='invalid'>\n\t\t\t\t\t\t\t\t{/* {feedback.password} */}\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t{errorText && (\n\t\t\t\t\t\t\t<Alert variant='secondary' className='mt-3'>\n\t\t\t\t\t\t\t\t{errorText}\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<LoadingButton\n\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\tclassName='mt-3 w-100'\n\t\t\t\t\t\t\tbuttonText='Sign In'\n\t\t\t\t\t\t\tshowLoading={isLoading}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</>\n\t)\n}\n","import 'scss/unauthorized.scss'\n\nimport React from 'react'\n\nimport Container from 'react-bootstrap/Container'\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\nimport SignIn from 'ts/containers/Signin'\nimport Paths from 'ts/utils/paths'\n\nfunction AppUnauthorized(): React.ReactElement {\n\treturn (\n\t\t<div className='app-unauthorized'>\n\t\t\t<Container>\n\t\t\t\t<HashRouter basename='/'>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<Route exact path={Paths.signIn} component={SignIn} />\n\n\t\t\t\t\t\t\t{/* Default redirect */}\n\t\t\t\t\t\t\t<Redirect push to={Paths.signIn} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Switch>\n\t\t\t\t</HashRouter>\n\t\t\t</Container>\n\t\t</div>\n\t)\n}\n\nexport default AppUnauthorized\n","import 'scss/global.scss'\n\nimport React, { Context } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { auth } from 'ts/services/firebase'\nimport { User } from 'ts/services/models'\nimport { formatUser } from 'ts/services/user'\n\nimport App from './App'\nimport AppUnauthorized from './AppUnauthorized'\n\nexport let UserContext: Context<User>\n\nauth.onAuthStateChanged(fireUser => {\n\tconst user = formatUser(fireUser) as User\n\tUserContext = React.createContext(user)\n\n\tif (user) {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<UserContext.Provider value={user}>\n\t\t\t\t\t<App />\n\t\t\t\t</UserContext.Provider>\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t} else {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<AppUnauthorized />\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t}\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n"],"sourceRoot":""}