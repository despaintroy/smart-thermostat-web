{"version":3,"sources":["ts/services/firebase.ts","ts/secrets.ts","ts/services/user.ts","ts/services/auth.ts","ts/utils/paths.ts","Navigation.tsx","ts/containers/Dashboard/Dashboard.tsx","ts/containers/Dashboard/index.js","ts/containers/Schedule/Schedule.tsx","ts/containers/Schedule/index.js","App.tsx","ts/containers/Signin.tsx","AppUnauthorized.tsx","index.tsx"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","formatUser","user","id","uid","name","displayName","email","phone","phoneNumber","signOut","Paths","dashboard","schedule","Navigation","Navbar","collapseOnSelect","expand","bg","variant","className","Container","to","Brand","href","Toggle","Collapse","Nav","Link","onClick","Dashboard","useContext","UserContext","Schedule","App","basename","exact","path","component","SignIn","useState","setEmail","password","setPassword","errorText","setErrorText","Card","Header","Body","Form","onSubmit","e","preventDefault","signInWithEmailAndPassword","then","Promise","resolve","catch","error","console","log","code","message","reject","signIn","Group","Label","Control","type","onChange","target","value","isInvalid","Feedback","Alert","Button","AppUnauthorized","onAuthStateChanged","fireUser","React","createContext","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.dacf9824.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app'\nimport { getAuth } from 'firebase/auth'\nimport { firebaseConfig } from 'ts/secrets'\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig)\nexport const auth = getAuth(firebaseApp)\n","export const firebaseConfig = {\n\tapiKey: 'AIzaSyAEqiutxiK9K41-zYltwLMIxNjMZvAq014',\n\tauthDomain: 'smart-thermostat-92710.firebaseapp.com',\n\tprojectId: 'smart-thermostat-92710',\n\tstorageBucket: 'smart-thermostat-92710.appspot.com',\n\tmessagingSenderId: '31001839536',\n\tappId: '1:31001839536:web:a4c255c21db37087f37875',\n}\n","import { User as FireUser } from '@firebase/auth'\n\nimport { auth } from './firebase'\nimport { User } from './models'\n\nexport const getUser = (): User | null => formatUser(auth.currentUser)\n\nexport const formatUser = (user: FireUser | null): User | null => {\n\tif (user)\n\t\treturn {\n\t\t\tid: user.uid,\n\t\t\tname: user.displayName,\n\t\t\temail: user.email,\n\t\t\tphone: user.phoneNumber,\n\t\t}\n\telse return null\n}\n","import { signInWithEmailAndPassword } from 'firebase/auth'\n\nimport { auth } from './firebase'\n\nexport const signIn = (email: string, password: string): Promise<boolean> => {\n\treturn signInWithEmailAndPassword(auth, email, password)\n\t\t.then(() => {\n\t\t\treturn Promise.resolve(true)\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log('Error Signing In')\n\t\t\tconsole.log(error.code)\n\t\t\tconsole.log(error.message)\n\t\t\treturn Promise.reject()\n\t\t})\n}\n\nexport const signOut = (): void => {\n\tauth.signOut()\n}\n","const Paths = {\n\tdashboard: '/dashboard',\n\tschedule: '/schedule',\n}\n\nexport default Paths\n","import 'scss/global.scss'\n\nimport React from 'react'\n\nimport { Container, Nav } from 'react-bootstrap'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { signOut } from 'ts/services/auth'\nimport Paths from 'ts/utils/paths'\n\nfunction Navigation(): React.ReactElement {\n\treturn (\n\t\t<Navbar\n\t\t\tcollapseOnSelect\n\t\t\texpand='sm'\n\t\t\tbg='primary'\n\t\t\tvariant='dark'\n\t\t\tclassName='mb-4'\n\t\t>\n\t\t\t<Container>\n\t\t\t\t<LinkContainer to={Paths.dashboard}>\n\t\t\t\t\t<Navbar.Brand href={Paths.dashboard}>Smart Thermostat</Navbar.Brand>\n\t\t\t\t</LinkContainer>\n\t\t\t\t<Navbar.Toggle aria-controls='responsive-navbar-nav' />\n\t\t\t\t<Navbar.Collapse id='responsive-navbar-nav'>\n\t\t\t\t\t<Nav className='me-auto'>\n\t\t\t\t\t\t<LinkContainer to={Paths.dashboard}>\n\t\t\t\t\t\t\t<Nav.Link>Dashboard</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t<LinkContainer to={Paths.schedule}>\n\t\t\t\t\t\t\t<Nav.Link>Schedule</Nav.Link>\n\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t<Nav.Link onClick={signOut}>Sign Out</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Container>\n\t\t</Navbar>\n\t)\n}\n\nexport default Navigation\n","import React, { useContext } from 'react'\n\nimport { UserContext } from 'index'\n\nfunction Dashboard(): React.ReactElement {\n\tconst user = useContext(UserContext)\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Dashboard</h1>\n\t\t\t<p>This is the dashboard page</p>\n\t\t\t<h2>User</h2>\n\t\t\t<p>Name: {user.name ?? '–'}</p>\n\t\t\t<p>Email: {user.email ?? '–'}</p>\n\t\t\t<p>Phone: {user.phone ?? '–'}</p>\n\t\t</>\n\t)\n}\n\nexport default Dashboard\n","import Dashboard from './Dashboard'\n\nexport default Dashboard\n","import React from 'react'\n\nfunction Schedule(): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<h1>Schedule</h1>\n\t\t\t<p>This is the schedule page</p>\n\t\t</>\n\t)\n}\n\nexport default Schedule\n","import Schedule from './Schedule'\n\nexport default Schedule\n","import 'scss/global.scss'\n\nimport React from 'react'\n\nimport Navigation from 'Navigation'\nimport { Container } from 'react-bootstrap'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport Dashboard from 'ts/containers/Dashboard'\nimport Schedule from 'ts/containers/Schedule'\nimport Paths from 'ts/utils/paths'\n\nfunction App(): React.ReactElement {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<HashRouter basename='/'>\n\t\t\t\t<Navigation />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Route exact path={Paths.dashboard} component={Dashboard} />\n\t\t\t\t\t\t<Route exact path={Paths.schedule} component={Schedule} />\n\t\t\t\t\t</Container>\n\t\t\t\t</Switch>\n\t\t\t</HashRouter>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React, { FormEvent, useState } from 'react'\n\nimport { Alert, Button, Card, Form } from 'react-bootstrap'\nimport { signIn } from 'ts/services/auth'\n\nexport default function SignIn(): React.ReactElement {\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [errorText, setErrorText] = useState<string>()\n\n\tconst submit = (e: FormEvent<HTMLFormElement>): void => {\n\t\te.preventDefault()\n\n\t\tif (!email || !password) setErrorText('Please enter all required fields')\n\t\telse signIn(email, password).catch(() => setErrorText('Could not sign in'))\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Card className='signin-card shadow mx-auto'>\n\t\t\t\t<Card.Header>Sign In</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t{/* <img src={process.env.PUBLIC_URL + '/logo-primary.png'} /> */}\n\t\t\t\t\t<Form onSubmit={submit}>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tonChange={(e): void => setEmail(e.target.value)}\n\t\t\t\t\t\t\t\tisInvalid={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback type='invalid'>\n\t\t\t\t\t\t\t\t{/* {feedback.username} */}\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tonChange={(e): void => setPassword(e.target.value)}\n\t\t\t\t\t\t\t\tisInvalid={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Form.Control.Feedback type='invalid'>\n\t\t\t\t\t\t\t\t{/* {feedback.password} */}\n\t\t\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t{errorText && (\n\t\t\t\t\t\t\t<Alert variant='secondary' className='mt-3'>\n\t\t\t\t\t\t\t\t{errorText}\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button type='submit' className='w-100 mt-3'>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</>\n\t)\n}\n","import 'scss/unauthorized.scss'\n\nimport React from 'react'\n\nimport Container from 'react-bootstrap/Container'\nimport SignIn from 'ts/containers/Signin'\n\nfunction AppUnauthorized(): React.ReactElement {\n\treturn (\n\t\t<div className='app-unauthorized'>\n\t\t\t<Container>\n\t\t\t\t<SignIn />\n\t\t\t</Container>\n\t\t</div>\n\t)\n}\n\nexport default AppUnauthorized\n","import 'scss/global.scss'\n\nimport React, { Context } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { auth } from 'ts/services/firebase'\nimport { User } from 'ts/services/models'\nimport { formatUser } from 'ts/services/user'\n\nimport App from './App'\nimport AppUnauthorized from './AppUnauthorized'\n\nexport let UserContext: Context<User>\n\nauth.onAuthStateChanged(fireUser => {\n\tconst user = formatUser(fireUser) as User\n\tUserContext = React.createContext(user)\n\n\tif (user) {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<UserContext.Provider value={user}>\n\t\t\t\t\t<App />\n\t\t\t\t</UserContext.Provider>\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t} else {\n\t\tReactDOM.render(\n\t\t\t<React.StrictMode>\n\t\t\t\t<AppUnauthorized />\n\t\t\t</React.StrictMode>,\n\t\t\tdocument.getElementById('root')\n\t\t)\n\t}\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n"],"sourceRoot":""}